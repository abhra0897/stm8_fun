                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _ws2812_send_pixel_24bits
                                     13 	.globl _ws2812_send_latch
                                     14 	.globl _ws2812_gpio_config
                                     15 	.globl _flash_read_from_addr
                                     16 	.globl _spi_config
                                     17 	.globl _strlen
                                     18 	.globl _get_next_color
                                     19 	.globl _uart_init
                                     20 	.globl _uart_write
                                     21 	.globl _uart_write_8bits
                                     22 	.globl _int_to_hex_str
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DATA
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area INITIALIZED
                                     31 ;--------------------------------------------------------
                                     32 ; Stack segment in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 	.area	SSEG
      000000                         35 __start__stack:
      000000                         36 	.ds	1
                                     37 
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS (ABS)
                                     42 
                                     43 ; default segment ordering for linker
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area CONST
                                     48 	.area INITIALIZER
                                     49 	.area CODE
                                     50 
                                     51 ;--------------------------------------------------------
                                     52 ; interrupt vector 
                                     53 ;--------------------------------------------------------
                                     54 	.area HOME
      000000                         55 __interrupt_vect:
      000000 82v00u00u00             56 	int s_GSINIT ; reset
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area HOME
                                     61 	.area GSINIT
                                     62 	.area GSFINAL
                                     63 	.area GSINIT
      000000                         64 __sdcc_gs_init_startup:
      000000                         65 __sdcc_init_data:
                                     66 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   67 	ldw x, #l_DATA
      000003 27 07            [ 1]   68 	jreq	00002$
      000005                         69 00001$:
      000005 72 4FuFFuFF      [ 1]   70 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   71 	decw x
      00000A 26 F9            [ 1]   72 	jrne	00001$
      00000C                         73 00002$:
      00000C AEr00r00         [ 2]   74 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   75 	jreq	00004$
      000011                         76 00003$:
      000011 D6uFFuFF         [ 1]   77 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   78 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   79 	decw	x
      000018 26 F7            [ 1]   80 	jrne	00003$
      00001A                         81 00004$:
                                     82 ; stm8_genXINIT() end
                                     83 	.area GSFINAL
      000000 CCr00r04         [ 2]   84 	jp	__sdcc_program_startup
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME
                                     89 	.area HOME
      000004                         90 __sdcc_program_startup:
      000004 CCr00r00         [ 2]   91 	jp	_main
                                     92 ;	return from main will return to caller
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CODE
                                     97 ;	src/main.c: 47: void main(void)
                                     98 ;	-----------------------------------------
                                     99 ;	 function main
                                    100 ;	-----------------------------------------
      000000                        101 _main:
      000000 52 EE            [ 2]  102 	sub	sp, #238
                                    103 ;	src/main.c: 50: CLK_CKDIVR = 0;
      000002 35 00 50 C6      [ 1]  104 	mov	0x50c6+0, #0x00
                                    105 ;	src/main.c: 51: uart_init();
      000006 CDr04r67         [ 4]  106 	call	_uart_init
                                    107 ;	src/main.c: 53: uint8_t buff[100] = {0};
      000009 0F 03            [ 1]  108 	clr	(0x03, sp)
      00000B 96               [ 1]  109 	ldw	x, sp
      00000C 6F 04            [ 1]  110 	clr	(4, x)
      00000E 96               [ 1]  111 	ldw	x, sp
      00000F 6F 05            [ 1]  112 	clr	(5, x)
      000011 96               [ 1]  113 	ldw	x, sp
      000012 6F 06            [ 1]  114 	clr	(6, x)
      000014 96               [ 1]  115 	ldw	x, sp
      000015 6F 07            [ 1]  116 	clr	(7, x)
      000017 96               [ 1]  117 	ldw	x, sp
      000018 6F 08            [ 1]  118 	clr	(8, x)
      00001A 96               [ 1]  119 	ldw	x, sp
      00001B 6F 09            [ 1]  120 	clr	(9, x)
      00001D 96               [ 1]  121 	ldw	x, sp
      00001E 6F 0A            [ 1]  122 	clr	(10, x)
      000020 96               [ 1]  123 	ldw	x, sp
      000021 6F 0B            [ 1]  124 	clr	(11, x)
      000023 96               [ 1]  125 	ldw	x, sp
      000024 6F 0C            [ 1]  126 	clr	(12, x)
      000026 96               [ 1]  127 	ldw	x, sp
      000027 6F 0D            [ 1]  128 	clr	(13, x)
      000029 96               [ 1]  129 	ldw	x, sp
      00002A 6F 0E            [ 1]  130 	clr	(14, x)
      00002C 96               [ 1]  131 	ldw	x, sp
      00002D 6F 0F            [ 1]  132 	clr	(15, x)
      00002F 96               [ 1]  133 	ldw	x, sp
      000030 6F 10            [ 1]  134 	clr	(16, x)
      000032 96               [ 1]  135 	ldw	x, sp
      000033 6F 11            [ 1]  136 	clr	(17, x)
      000035 96               [ 1]  137 	ldw	x, sp
      000036 6F 12            [ 1]  138 	clr	(18, x)
      000038 96               [ 1]  139 	ldw	x, sp
      000039 6F 13            [ 1]  140 	clr	(19, x)
      00003B 96               [ 1]  141 	ldw	x, sp
      00003C 6F 14            [ 1]  142 	clr	(20, x)
      00003E 96               [ 1]  143 	ldw	x, sp
      00003F 6F 15            [ 1]  144 	clr	(21, x)
      000041 96               [ 1]  145 	ldw	x, sp
      000042 6F 16            [ 1]  146 	clr	(22, x)
      000044 96               [ 1]  147 	ldw	x, sp
      000045 6F 17            [ 1]  148 	clr	(23, x)
      000047 96               [ 1]  149 	ldw	x, sp
      000048 6F 18            [ 1]  150 	clr	(24, x)
      00004A 96               [ 1]  151 	ldw	x, sp
      00004B 6F 19            [ 1]  152 	clr	(25, x)
      00004D 96               [ 1]  153 	ldw	x, sp
      00004E 6F 1A            [ 1]  154 	clr	(26, x)
      000050 96               [ 1]  155 	ldw	x, sp
      000051 6F 1B            [ 1]  156 	clr	(27, x)
      000053 96               [ 1]  157 	ldw	x, sp
      000054 6F 1C            [ 1]  158 	clr	(28, x)
      000056 96               [ 1]  159 	ldw	x, sp
      000057 6F 1D            [ 1]  160 	clr	(29, x)
      000059 96               [ 1]  161 	ldw	x, sp
      00005A 6F 1E            [ 1]  162 	clr	(30, x)
      00005C 96               [ 1]  163 	ldw	x, sp
      00005D 6F 1F            [ 1]  164 	clr	(31, x)
      00005F 96               [ 1]  165 	ldw	x, sp
      000060 6F 20            [ 1]  166 	clr	(32, x)
      000062 96               [ 1]  167 	ldw	x, sp
      000063 6F 21            [ 1]  168 	clr	(33, x)
      000065 96               [ 1]  169 	ldw	x, sp
      000066 6F 22            [ 1]  170 	clr	(34, x)
      000068 96               [ 1]  171 	ldw	x, sp
      000069 6F 23            [ 1]  172 	clr	(35, x)
      00006B 96               [ 1]  173 	ldw	x, sp
      00006C 6F 24            [ 1]  174 	clr	(36, x)
      00006E 96               [ 1]  175 	ldw	x, sp
      00006F 6F 25            [ 1]  176 	clr	(37, x)
      000071 96               [ 1]  177 	ldw	x, sp
      000072 6F 26            [ 1]  178 	clr	(38, x)
      000074 96               [ 1]  179 	ldw	x, sp
      000075 6F 27            [ 1]  180 	clr	(39, x)
      000077 96               [ 1]  181 	ldw	x, sp
      000078 6F 28            [ 1]  182 	clr	(40, x)
      00007A 96               [ 1]  183 	ldw	x, sp
      00007B 6F 29            [ 1]  184 	clr	(41, x)
      00007D 96               [ 1]  185 	ldw	x, sp
      00007E 6F 2A            [ 1]  186 	clr	(42, x)
      000080 96               [ 1]  187 	ldw	x, sp
      000081 6F 2B            [ 1]  188 	clr	(43, x)
      000083 96               [ 1]  189 	ldw	x, sp
      000084 6F 2C            [ 1]  190 	clr	(44, x)
      000086 96               [ 1]  191 	ldw	x, sp
      000087 6F 2D            [ 1]  192 	clr	(45, x)
      000089 96               [ 1]  193 	ldw	x, sp
      00008A 6F 2E            [ 1]  194 	clr	(46, x)
      00008C 96               [ 1]  195 	ldw	x, sp
      00008D 6F 2F            [ 1]  196 	clr	(47, x)
      00008F 96               [ 1]  197 	ldw	x, sp
      000090 6F 30            [ 1]  198 	clr	(48, x)
      000092 96               [ 1]  199 	ldw	x, sp
      000093 6F 31            [ 1]  200 	clr	(49, x)
      000095 96               [ 1]  201 	ldw	x, sp
      000096 6F 32            [ 1]  202 	clr	(50, x)
      000098 96               [ 1]  203 	ldw	x, sp
      000099 6F 33            [ 1]  204 	clr	(51, x)
      00009B 96               [ 1]  205 	ldw	x, sp
      00009C 6F 34            [ 1]  206 	clr	(52, x)
      00009E 96               [ 1]  207 	ldw	x, sp
      00009F 6F 35            [ 1]  208 	clr	(53, x)
      0000A1 96               [ 1]  209 	ldw	x, sp
      0000A2 6F 36            [ 1]  210 	clr	(54, x)
      0000A4 96               [ 1]  211 	ldw	x, sp
      0000A5 6F 37            [ 1]  212 	clr	(55, x)
      0000A7 96               [ 1]  213 	ldw	x, sp
      0000A8 6F 38            [ 1]  214 	clr	(56, x)
      0000AA 96               [ 1]  215 	ldw	x, sp
      0000AB 6F 39            [ 1]  216 	clr	(57, x)
      0000AD 96               [ 1]  217 	ldw	x, sp
      0000AE 6F 3A            [ 1]  218 	clr	(58, x)
      0000B0 96               [ 1]  219 	ldw	x, sp
      0000B1 6F 3B            [ 1]  220 	clr	(59, x)
      0000B3 96               [ 1]  221 	ldw	x, sp
      0000B4 6F 3C            [ 1]  222 	clr	(60, x)
      0000B6 96               [ 1]  223 	ldw	x, sp
      0000B7 6F 3D            [ 1]  224 	clr	(61, x)
      0000B9 96               [ 1]  225 	ldw	x, sp
      0000BA 6F 3E            [ 1]  226 	clr	(62, x)
      0000BC 96               [ 1]  227 	ldw	x, sp
      0000BD 6F 3F            [ 1]  228 	clr	(63, x)
      0000BF 96               [ 1]  229 	ldw	x, sp
      0000C0 6F 40            [ 1]  230 	clr	(64, x)
      0000C2 96               [ 1]  231 	ldw	x, sp
      0000C3 6F 41            [ 1]  232 	clr	(65, x)
      0000C5 96               [ 1]  233 	ldw	x, sp
      0000C6 6F 42            [ 1]  234 	clr	(66, x)
      0000C8 96               [ 1]  235 	ldw	x, sp
      0000C9 6F 43            [ 1]  236 	clr	(67, x)
      0000CB 96               [ 1]  237 	ldw	x, sp
      0000CC 6F 44            [ 1]  238 	clr	(68, x)
      0000CE 96               [ 1]  239 	ldw	x, sp
      0000CF 6F 45            [ 1]  240 	clr	(69, x)
      0000D1 96               [ 1]  241 	ldw	x, sp
      0000D2 6F 46            [ 1]  242 	clr	(70, x)
      0000D4 96               [ 1]  243 	ldw	x, sp
      0000D5 6F 47            [ 1]  244 	clr	(71, x)
      0000D7 96               [ 1]  245 	ldw	x, sp
      0000D8 6F 48            [ 1]  246 	clr	(72, x)
      0000DA 96               [ 1]  247 	ldw	x, sp
      0000DB 6F 49            [ 1]  248 	clr	(73, x)
      0000DD 96               [ 1]  249 	ldw	x, sp
      0000DE 6F 4A            [ 1]  250 	clr	(74, x)
      0000E0 96               [ 1]  251 	ldw	x, sp
      0000E1 6F 4B            [ 1]  252 	clr	(75, x)
      0000E3 96               [ 1]  253 	ldw	x, sp
      0000E4 6F 4C            [ 1]  254 	clr	(76, x)
      0000E6 96               [ 1]  255 	ldw	x, sp
      0000E7 6F 4D            [ 1]  256 	clr	(77, x)
      0000E9 96               [ 1]  257 	ldw	x, sp
      0000EA 6F 4E            [ 1]  258 	clr	(78, x)
      0000EC 96               [ 1]  259 	ldw	x, sp
      0000ED 6F 4F            [ 1]  260 	clr	(79, x)
      0000EF 96               [ 1]  261 	ldw	x, sp
      0000F0 6F 50            [ 1]  262 	clr	(80, x)
      0000F2 96               [ 1]  263 	ldw	x, sp
      0000F3 6F 51            [ 1]  264 	clr	(81, x)
      0000F5 96               [ 1]  265 	ldw	x, sp
      0000F6 6F 52            [ 1]  266 	clr	(82, x)
      0000F8 96               [ 1]  267 	ldw	x, sp
      0000F9 6F 53            [ 1]  268 	clr	(83, x)
      0000FB 96               [ 1]  269 	ldw	x, sp
      0000FC 6F 54            [ 1]  270 	clr	(84, x)
      0000FE 96               [ 1]  271 	ldw	x, sp
      0000FF 6F 55            [ 1]  272 	clr	(85, x)
      000101 96               [ 1]  273 	ldw	x, sp
      000102 6F 56            [ 1]  274 	clr	(86, x)
      000104 96               [ 1]  275 	ldw	x, sp
      000105 6F 57            [ 1]  276 	clr	(87, x)
      000107 96               [ 1]  277 	ldw	x, sp
      000108 6F 58            [ 1]  278 	clr	(88, x)
      00010A 96               [ 1]  279 	ldw	x, sp
      00010B 6F 59            [ 1]  280 	clr	(89, x)
      00010D 96               [ 1]  281 	ldw	x, sp
      00010E 6F 5A            [ 1]  282 	clr	(90, x)
      000110 96               [ 1]  283 	ldw	x, sp
      000111 6F 5B            [ 1]  284 	clr	(91, x)
      000113 96               [ 1]  285 	ldw	x, sp
      000114 6F 5C            [ 1]  286 	clr	(92, x)
      000116 96               [ 1]  287 	ldw	x, sp
      000117 6F 5D            [ 1]  288 	clr	(93, x)
      000119 96               [ 1]  289 	ldw	x, sp
      00011A 6F 5E            [ 1]  290 	clr	(94, x)
      00011C 96               [ 1]  291 	ldw	x, sp
      00011D 6F 5F            [ 1]  292 	clr	(95, x)
      00011F 96               [ 1]  293 	ldw	x, sp
      000120 6F 60            [ 1]  294 	clr	(96, x)
      000122 96               [ 1]  295 	ldw	x, sp
      000123 6F 61            [ 1]  296 	clr	(97, x)
      000125 96               [ 1]  297 	ldw	x, sp
      000126 6F 62            [ 1]  298 	clr	(98, x)
      000128 96               [ 1]  299 	ldw	x, sp
      000129 6F 63            [ 1]  300 	clr	(99, x)
      00012B 96               [ 1]  301 	ldw	x, sp
      00012C 6F 64            [ 1]  302 	clr	(100, x)
      00012E 96               [ 1]  303 	ldw	x, sp
      00012F 6F 65            [ 1]  304 	clr	(101, x)
      000131 96               [ 1]  305 	ldw	x, sp
      000132 6F 66            [ 1]  306 	clr	(102, x)
                                    307 ;	src/main.c: 54: uint8_t buff2[100] = {0};
      000134 0F 67            [ 1]  308 	clr	(0x67, sp)
      000136 96               [ 1]  309 	ldw	x, sp
      000137 6F 68            [ 1]  310 	clr	(104, x)
      000139 96               [ 1]  311 	ldw	x, sp
      00013A 6F 69            [ 1]  312 	clr	(105, x)
      00013C 96               [ 1]  313 	ldw	x, sp
      00013D 6F 6A            [ 1]  314 	clr	(106, x)
      00013F 96               [ 1]  315 	ldw	x, sp
      000140 6F 6B            [ 1]  316 	clr	(107, x)
      000142 96               [ 1]  317 	ldw	x, sp
      000143 6F 6C            [ 1]  318 	clr	(108, x)
      000145 96               [ 1]  319 	ldw	x, sp
      000146 6F 6D            [ 1]  320 	clr	(109, x)
      000148 96               [ 1]  321 	ldw	x, sp
      000149 6F 6E            [ 1]  322 	clr	(110, x)
      00014B 96               [ 1]  323 	ldw	x, sp
      00014C 6F 6F            [ 1]  324 	clr	(111, x)
      00014E 96               [ 1]  325 	ldw	x, sp
      00014F 6F 70            [ 1]  326 	clr	(112, x)
      000151 96               [ 1]  327 	ldw	x, sp
      000152 6F 71            [ 1]  328 	clr	(113, x)
      000154 96               [ 1]  329 	ldw	x, sp
      000155 6F 72            [ 1]  330 	clr	(114, x)
      000157 96               [ 1]  331 	ldw	x, sp
      000158 6F 73            [ 1]  332 	clr	(115, x)
      00015A 96               [ 1]  333 	ldw	x, sp
      00015B 6F 74            [ 1]  334 	clr	(116, x)
      00015D 96               [ 1]  335 	ldw	x, sp
      00015E 6F 75            [ 1]  336 	clr	(117, x)
      000160 96               [ 1]  337 	ldw	x, sp
      000161 6F 76            [ 1]  338 	clr	(118, x)
      000163 96               [ 1]  339 	ldw	x, sp
      000164 6F 77            [ 1]  340 	clr	(119, x)
      000166 96               [ 1]  341 	ldw	x, sp
      000167 6F 78            [ 1]  342 	clr	(120, x)
      000169 96               [ 1]  343 	ldw	x, sp
      00016A 6F 79            [ 1]  344 	clr	(121, x)
      00016C 96               [ 1]  345 	ldw	x, sp
      00016D 6F 7A            [ 1]  346 	clr	(122, x)
      00016F 96               [ 1]  347 	ldw	x, sp
      000170 6F 7B            [ 1]  348 	clr	(123, x)
      000172 96               [ 1]  349 	ldw	x, sp
      000173 6F 7C            [ 1]  350 	clr	(124, x)
      000175 96               [ 1]  351 	ldw	x, sp
      000176 6F 7D            [ 1]  352 	clr	(125, x)
      000178 96               [ 1]  353 	ldw	x, sp
      000179 6F 7E            [ 1]  354 	clr	(126, x)
      00017B 96               [ 1]  355 	ldw	x, sp
      00017C 6F 7F            [ 1]  356 	clr	(127, x)
      00017E 96               [ 1]  357 	ldw	x, sp
      00017F 6F 80            [ 1]  358 	clr	(128, x)
      000181 96               [ 1]  359 	ldw	x, sp
      000182 6F 81            [ 1]  360 	clr	(129, x)
      000184 96               [ 1]  361 	ldw	x, sp
      000185 6F 82            [ 1]  362 	clr	(130, x)
      000187 96               [ 1]  363 	ldw	x, sp
      000188 6F 83            [ 1]  364 	clr	(131, x)
      00018A 96               [ 1]  365 	ldw	x, sp
      00018B 6F 84            [ 1]  366 	clr	(132, x)
      00018D 96               [ 1]  367 	ldw	x, sp
      00018E 6F 85            [ 1]  368 	clr	(133, x)
      000190 96               [ 1]  369 	ldw	x, sp
      000191 6F 86            [ 1]  370 	clr	(134, x)
      000193 96               [ 1]  371 	ldw	x, sp
      000194 6F 87            [ 1]  372 	clr	(135, x)
      000196 96               [ 1]  373 	ldw	x, sp
      000197 6F 88            [ 1]  374 	clr	(136, x)
      000199 96               [ 1]  375 	ldw	x, sp
      00019A 6F 89            [ 1]  376 	clr	(137, x)
      00019C 96               [ 1]  377 	ldw	x, sp
      00019D 6F 8A            [ 1]  378 	clr	(138, x)
      00019F 96               [ 1]  379 	ldw	x, sp
      0001A0 6F 8B            [ 1]  380 	clr	(139, x)
      0001A2 96               [ 1]  381 	ldw	x, sp
      0001A3 6F 8C            [ 1]  382 	clr	(140, x)
      0001A5 96               [ 1]  383 	ldw	x, sp
      0001A6 6F 8D            [ 1]  384 	clr	(141, x)
      0001A8 96               [ 1]  385 	ldw	x, sp
      0001A9 6F 8E            [ 1]  386 	clr	(142, x)
      0001AB 96               [ 1]  387 	ldw	x, sp
      0001AC 6F 8F            [ 1]  388 	clr	(143, x)
      0001AE 96               [ 1]  389 	ldw	x, sp
      0001AF 6F 90            [ 1]  390 	clr	(144, x)
      0001B1 96               [ 1]  391 	ldw	x, sp
      0001B2 6F 91            [ 1]  392 	clr	(145, x)
      0001B4 96               [ 1]  393 	ldw	x, sp
      0001B5 6F 92            [ 1]  394 	clr	(146, x)
      0001B7 96               [ 1]  395 	ldw	x, sp
      0001B8 6F 93            [ 1]  396 	clr	(147, x)
      0001BA 96               [ 1]  397 	ldw	x, sp
      0001BB 6F 94            [ 1]  398 	clr	(148, x)
      0001BD 96               [ 1]  399 	ldw	x, sp
      0001BE 6F 95            [ 1]  400 	clr	(149, x)
      0001C0 96               [ 1]  401 	ldw	x, sp
      0001C1 6F 96            [ 1]  402 	clr	(150, x)
      0001C3 96               [ 1]  403 	ldw	x, sp
      0001C4 6F 97            [ 1]  404 	clr	(151, x)
      0001C6 96               [ 1]  405 	ldw	x, sp
      0001C7 6F 98            [ 1]  406 	clr	(152, x)
      0001C9 96               [ 1]  407 	ldw	x, sp
      0001CA 6F 99            [ 1]  408 	clr	(153, x)
      0001CC 96               [ 1]  409 	ldw	x, sp
      0001CD 6F 9A            [ 1]  410 	clr	(154, x)
      0001CF 96               [ 1]  411 	ldw	x, sp
      0001D0 6F 9B            [ 1]  412 	clr	(155, x)
      0001D2 96               [ 1]  413 	ldw	x, sp
      0001D3 6F 9C            [ 1]  414 	clr	(156, x)
      0001D5 96               [ 1]  415 	ldw	x, sp
      0001D6 6F 9D            [ 1]  416 	clr	(157, x)
      0001D8 96               [ 1]  417 	ldw	x, sp
      0001D9 6F 9E            [ 1]  418 	clr	(158, x)
      0001DB 96               [ 1]  419 	ldw	x, sp
      0001DC 6F 9F            [ 1]  420 	clr	(159, x)
      0001DE 96               [ 1]  421 	ldw	x, sp
      0001DF 6F A0            [ 1]  422 	clr	(160, x)
      0001E1 96               [ 1]  423 	ldw	x, sp
      0001E2 6F A1            [ 1]  424 	clr	(161, x)
      0001E4 96               [ 1]  425 	ldw	x, sp
      0001E5 6F A2            [ 1]  426 	clr	(162, x)
      0001E7 96               [ 1]  427 	ldw	x, sp
      0001E8 6F A3            [ 1]  428 	clr	(163, x)
      0001EA 96               [ 1]  429 	ldw	x, sp
      0001EB 6F A4            [ 1]  430 	clr	(164, x)
      0001ED 96               [ 1]  431 	ldw	x, sp
      0001EE 6F A5            [ 1]  432 	clr	(165, x)
      0001F0 96               [ 1]  433 	ldw	x, sp
      0001F1 6F A6            [ 1]  434 	clr	(166, x)
      0001F3 96               [ 1]  435 	ldw	x, sp
      0001F4 6F A7            [ 1]  436 	clr	(167, x)
      0001F6 96               [ 1]  437 	ldw	x, sp
      0001F7 6F A8            [ 1]  438 	clr	(168, x)
      0001F9 96               [ 1]  439 	ldw	x, sp
      0001FA 6F A9            [ 1]  440 	clr	(169, x)
      0001FC 96               [ 1]  441 	ldw	x, sp
      0001FD 6F AA            [ 1]  442 	clr	(170, x)
      0001FF 96               [ 1]  443 	ldw	x, sp
      000200 6F AB            [ 1]  444 	clr	(171, x)
      000202 96               [ 1]  445 	ldw	x, sp
      000203 6F AC            [ 1]  446 	clr	(172, x)
      000205 96               [ 1]  447 	ldw	x, sp
      000206 6F AD            [ 1]  448 	clr	(173, x)
      000208 96               [ 1]  449 	ldw	x, sp
      000209 6F AE            [ 1]  450 	clr	(174, x)
      00020B 96               [ 1]  451 	ldw	x, sp
      00020C 6F AF            [ 1]  452 	clr	(175, x)
      00020E 96               [ 1]  453 	ldw	x, sp
      00020F 6F B0            [ 1]  454 	clr	(176, x)
      000211 96               [ 1]  455 	ldw	x, sp
      000212 6F B1            [ 1]  456 	clr	(177, x)
      000214 96               [ 1]  457 	ldw	x, sp
      000215 6F B2            [ 1]  458 	clr	(178, x)
      000217 96               [ 1]  459 	ldw	x, sp
      000218 6F B3            [ 1]  460 	clr	(179, x)
      00021A 96               [ 1]  461 	ldw	x, sp
      00021B 6F B4            [ 1]  462 	clr	(180, x)
      00021D 96               [ 1]  463 	ldw	x, sp
      00021E 6F B5            [ 1]  464 	clr	(181, x)
      000220 96               [ 1]  465 	ldw	x, sp
      000221 6F B6            [ 1]  466 	clr	(182, x)
      000223 96               [ 1]  467 	ldw	x, sp
      000224 6F B7            [ 1]  468 	clr	(183, x)
      000226 96               [ 1]  469 	ldw	x, sp
      000227 6F B8            [ 1]  470 	clr	(184, x)
      000229 96               [ 1]  471 	ldw	x, sp
      00022A 6F B9            [ 1]  472 	clr	(185, x)
      00022C 96               [ 1]  473 	ldw	x, sp
      00022D 6F BA            [ 1]  474 	clr	(186, x)
      00022F 96               [ 1]  475 	ldw	x, sp
      000230 6F BB            [ 1]  476 	clr	(187, x)
      000232 96               [ 1]  477 	ldw	x, sp
      000233 6F BC            [ 1]  478 	clr	(188, x)
      000235 96               [ 1]  479 	ldw	x, sp
      000236 6F BD            [ 1]  480 	clr	(189, x)
      000238 96               [ 1]  481 	ldw	x, sp
      000239 6F BE            [ 1]  482 	clr	(190, x)
      00023B 96               [ 1]  483 	ldw	x, sp
      00023C 6F BF            [ 1]  484 	clr	(191, x)
      00023E 96               [ 1]  485 	ldw	x, sp
      00023F 6F C0            [ 1]  486 	clr	(192, x)
      000241 96               [ 1]  487 	ldw	x, sp
      000242 6F C1            [ 1]  488 	clr	(193, x)
      000244 96               [ 1]  489 	ldw	x, sp
      000245 6F C2            [ 1]  490 	clr	(194, x)
      000247 96               [ 1]  491 	ldw	x, sp
      000248 6F C3            [ 1]  492 	clr	(195, x)
      00024A 96               [ 1]  493 	ldw	x, sp
      00024B 6F C4            [ 1]  494 	clr	(196, x)
      00024D 96               [ 1]  495 	ldw	x, sp
      00024E 6F C5            [ 1]  496 	clr	(197, x)
      000250 96               [ 1]  497 	ldw	x, sp
      000251 6F C6            [ 1]  498 	clr	(198, x)
      000253 96               [ 1]  499 	ldw	x, sp
      000254 6F C7            [ 1]  500 	clr	(199, x)
      000256 96               [ 1]  501 	ldw	x, sp
      000257 6F C8            [ 1]  502 	clr	(200, x)
      000259 96               [ 1]  503 	ldw	x, sp
      00025A 6F C9            [ 1]  504 	clr	(201, x)
      00025C 96               [ 1]  505 	ldw	x, sp
      00025D 6F CA            [ 1]  506 	clr	(202, x)
                                    507 ;	src/main.c: 55: for (uint8_t i = 0; i < 100; i++)
      00025F 4F               [ 1]  508 	clr	a
      000260                        509 00112$:
      000260 A1 64            [ 1]  510 	cp	a, #0x64
      000262 24 10            [ 1]  511 	jrnc	00101$
                                    512 ;	src/main.c: 57: buff[i] = i/* +7+'0' */;
      000264 96               [ 1]  513 	ldw	x, sp
      000265 1C 00 03         [ 2]  514 	addw	x, #3
      000268 89               [ 2]  515 	pushw	x
      000269 5F               [ 1]  516 	clrw	x
      00026A 97               [ 1]  517 	ld	xl, a
      00026B 72 FB 01         [ 2]  518 	addw	x, (1, sp)
      00026E 5B 02            [ 2]  519 	addw	sp, #2
      000270 F7               [ 1]  520 	ld	(x), a
                                    521 ;	src/main.c: 55: for (uint8_t i = 0; i < 100; i++)
      000271 4C               [ 1]  522 	inc	a
      000272 20 EC            [ 2]  523 	jra	00112$
      000274                        524 00101$:
                                    525 ;	src/main.c: 60: ws2812_gpio_config();
      000274 CDr00r00         [ 4]  526 	call	_ws2812_gpio_config
                                    527 ;	src/main.c: 61: spi_config();
      000277 CDr00r00         [ 4]  528 	call	_spi_config
                                    529 ;	src/main.c: 72: uart_write_8bits(0x99); //indicates start
      00027A 4B 99            [ 1]  530 	push	#0x99
      00027C CDr04rAD         [ 4]  531 	call	_uart_write_8bits
      00027F 84               [ 1]  532 	pop	a
                                    533 ;	src/main.c: 74: flash_read_from_addr(0x012345, buff2, 100);
      000280 4B 64            [ 1]  534 	push	#0x64
      000282 4B 00            [ 1]  535 	push	#0x00
      000284 96               [ 1]  536 	ldw	x, sp
      000285 1C 00 69         [ 2]  537 	addw	x, #105
      000288 89               [ 2]  538 	pushw	x
      000289 4B 45            [ 1]  539 	push	#0x45
      00028B 4B 23            [ 1]  540 	push	#0x23
      00028D 4B 01            [ 1]  541 	push	#0x01
      00028F 4B 00            [ 1]  542 	push	#0x00
      000291 CDr00r00         [ 4]  543 	call	_flash_read_from_addr
      000294 5B 08            [ 2]  544 	addw	sp, #8
                                    545 ;	src/main.c: 77: char hex_string[2] = {0};
      000296 0F CB            [ 1]  546 	clr	(0xcb, sp)
      000298 96               [ 1]  547 	ldw	x, sp
      000299 1C 00 CC         [ 2]  548 	addw	x, #204
      00029C 7F               [ 1]  549 	clr	(x)
                                    550 ;	src/main.c: 80: uint8_t red = 255, green = 0, blue = 0;
      00029D A6 FF            [ 1]  551 	ld	a, #0xff
      00029F 6B CD            [ 1]  552 	ld	(0xcd, sp), a
      0002A1 0F CE            [ 1]  553 	clr	(0xce, sp)
      0002A3 0F CF            [ 1]  554 	clr	(0xcf, sp)
                                    555 ;	src/main.c: 81: uint8_t r_temp = red, g_temp = green, b_temp = blue;
      0002A5 A6 FF            [ 1]  556 	ld	a, #0xff
      0002A7 6B D0            [ 1]  557 	ld	(0xd0, sp), a
      0002A9 0F D1            [ 1]  558 	clr	(0xd1, sp)
      0002AB 0F D2            [ 1]  559 	clr	(0xd2, sp)
                                    560 ;	src/main.c: 89: for (uint8_t led_cnt = 0; led_cnt < LED_COUNT; led_cnt++)
      0002AD                        561 00128$:
      0002AD 0F EE            [ 1]  562 	clr	(0xee, sp)
      0002AF                        563 00115$:
      0002AF 7B EE            [ 1]  564 	ld	a, (0xee, sp)
      0002B1 A1 08            [ 1]  565 	cp	a, #0x08
      0002B3 24 5B            [ 1]  566 	jrnc	00102$
                                    567 ;	src/main.c: 91: get_next_color(&r_temp, &g_temp, &b_temp, 100);
      0002B5 4B 64            [ 1]  568 	push	#0x64
      0002B7 96               [ 1]  569 	ldw	x, sp
      0002B8 1C 00 D3         [ 2]  570 	addw	x, #211
      0002BB 89               [ 2]  571 	pushw	x
      0002BC 96               [ 1]  572 	ldw	x, sp
      0002BD 1C 00 D4         [ 2]  573 	addw	x, #212
      0002C0 89               [ 2]  574 	pushw	x
      0002C1 96               [ 1]  575 	ldw	x, sp
      0002C2 1C 00 D5         [ 2]  576 	addw	x, #213
      0002C5 89               [ 2]  577 	pushw	x
      0002C6 CDr03r88         [ 4]  578 	call	_get_next_color
      0002C9 5B 07            [ 2]  579 	addw	sp, #7
                                    580 ;	src/main.c: 92: color_buff[led_cnt][0] = CIE_CORRECTION[r_temp];
      0002CB 7B EE            [ 1]  581 	ld	a, (0xee, sp)
      0002CD 97               [ 1]  582 	ld	xl, a
      0002CE A6 03            [ 1]  583 	ld	a, #0x03
      0002D0 42               [ 4]  584 	mul	x, a
      0002D1 1F EC            [ 2]  585 	ldw	(0xec, sp), x
      0002D3 90 96            [ 1]  586 	ldw	y, sp
      0002D5 72 A9 00 D3      [ 2]  587 	addw	y, #211
      0002D9 72 F9 EC         [ 2]  588 	addw	y, (0xec, sp)
      0002DC 5F               [ 1]  589 	clrw	x
      0002DD 7B D0            [ 1]  590 	ld	a, (0xd0, sp)
      0002DF 97               [ 1]  591 	ld	xl, a
      0002E0 1Cr00r00         [ 2]  592 	addw	x, #(_CIE_CORRECTION + 0)
      0002E3 F6               [ 1]  593 	ld	a, (x)
      0002E4 90 F7            [ 1]  594 	ld	(y), a
                                    595 ;	src/main.c: 93: color_buff[led_cnt][1] = CIE_CORRECTION[g_temp];
      0002E6 90 96            [ 1]  596 	ldw	y, sp
      0002E8 72 A9 00 D3      [ 2]  597 	addw	y, #211
      0002EC 72 F9 EC         [ 2]  598 	addw	y, (0xec, sp)
      0002EF 93               [ 1]  599 	ldw	x, y
      0002F0 5C               [ 1]  600 	incw	x
      0002F1 1F EC            [ 2]  601 	ldw	(0xec, sp), x
      0002F3 5F               [ 1]  602 	clrw	x
      0002F4 7B D1            [ 1]  603 	ld	a, (0xd1, sp)
      0002F6 97               [ 1]  604 	ld	xl, a
      0002F7 1Cr00r00         [ 2]  605 	addw	x, #(_CIE_CORRECTION + 0)
      0002FA F6               [ 1]  606 	ld	a, (x)
      0002FB 1E EC            [ 2]  607 	ldw	x, (0xec, sp)
      0002FD F7               [ 1]  608 	ld	(x), a
                                    609 ;	src/main.c: 94: color_buff[led_cnt][2] = CIE_CORRECTION[b_temp];
      0002FE 72 A9 00 02      [ 2]  610 	addw	y, #0x0002
      000302 5F               [ 1]  611 	clrw	x
      000303 7B D2            [ 1]  612 	ld	a, (0xd2, sp)
      000305 97               [ 1]  613 	ld	xl, a
      000306 1Cr00r00         [ 2]  614 	addw	x, #(_CIE_CORRECTION + 0)
      000309 F6               [ 1]  615 	ld	a, (x)
      00030A 90 F7            [ 1]  616 	ld	(y), a
                                    617 ;	src/main.c: 89: for (uint8_t led_cnt = 0; led_cnt < LED_COUNT; led_cnt++)
      00030C 0C EE            [ 1]  618 	inc	(0xee, sp)
      00030E 20 9F            [ 2]  619 	jra	00115$
      000310                        620 00102$:
                                    621 ;	src/main.c: 101: for (uint8_t led_cnt = 0; led_cnt < LED_COUNT; led_cnt++)
      000310 0F EE            [ 1]  622 	clr	(0xee, sp)
      000312                        623 00118$:
      000312 7B EE            [ 1]  624 	ld	a, (0xee, sp)
      000314 A1 08            [ 1]  625 	cp	a, #0x08
      000316 24 2F            [ 1]  626 	jrnc	00103$
                                    627 ;	src/main.c: 104: ws2812_send_pixel_24bits(color_buff[led_cnt][0], color_buff[led_cnt][1], color_buff[led_cnt][2]);
      000318 7B EE            [ 1]  628 	ld	a, (0xee, sp)
      00031A 97               [ 1]  629 	ld	xl, a
      00031B A6 03            [ 1]  630 	ld	a, #0x03
      00031D 42               [ 4]  631 	mul	x, a
      00031E 1F 01            [ 2]  632 	ldw	(0x01, sp), x
      000320 96               [ 1]  633 	ldw	x, sp
      000321 1C 00 D3         [ 2]  634 	addw	x, #211
      000324 72 FB 01         [ 2]  635 	addw	x, (0x01, sp)
      000327 1F EB            [ 2]  636 	ldw	(0xeb, sp), x
      000329 E6 02            [ 1]  637 	ld	a, (0x2, x)
      00032B 6B ED            [ 1]  638 	ld	(0xed, sp), a
      00032D 1E EB            [ 2]  639 	ldw	x, (0xeb, sp)
      00032F E6 01            [ 1]  640 	ld	a, (0x1, x)
      000331 97               [ 1]  641 	ld	xl, a
      000332 16 EB            [ 2]  642 	ldw	y, (0xeb, sp)
      000334 90 F6            [ 1]  643 	ld	a, (y)
      000336 95               [ 1]  644 	ld	xh, a
      000337 7B ED            [ 1]  645 	ld	a, (0xed, sp)
      000339 88               [ 1]  646 	push	a
      00033A 9F               [ 1]  647 	ld	a, xl
      00033B 88               [ 1]  648 	push	a
      00033C 9E               [ 1]  649 	ld	a, xh
      00033D 88               [ 1]  650 	push	a
      00033E CDr00r00         [ 4]  651 	call	_ws2812_send_pixel_24bits
      000341 5B 03            [ 2]  652 	addw	sp, #3
                                    653 ;	src/main.c: 101: for (uint8_t led_cnt = 0; led_cnt < LED_COUNT; led_cnt++)
      000343 0C EE            [ 1]  654 	inc	(0xee, sp)
      000345 20 CB            [ 2]  655 	jra	00118$
      000347                        656 00103$:
                                    657 ;	src/main.c: 108: ws2812_send_latch();
      000347 CDr00r00         [ 4]  658 	call	_ws2812_send_latch
                                    659 ;	src/main.c: 109: get_next_color(&red, &green, &blue, 10);
      00034A 4B 0A            [ 1]  660 	push	#0x0a
      00034C 96               [ 1]  661 	ldw	x, sp
      00034D 1C 00 D0         [ 2]  662 	addw	x, #208
      000350 89               [ 2]  663 	pushw	x
      000351 96               [ 1]  664 	ldw	x, sp
      000352 1C 00 D1         [ 2]  665 	addw	x, #209
      000355 89               [ 2]  666 	pushw	x
      000356 96               [ 1]  667 	ldw	x, sp
      000357 1C 00 D2         [ 2]  668 	addw	x, #210
      00035A 89               [ 2]  669 	pushw	x
      00035B CDr03r88         [ 4]  670 	call	_get_next_color
      00035E 5B 07            [ 2]  671 	addw	sp, #7
                                    672 ;	src/main.c: 110: r_temp = red, g_temp = green, b_temp = blue;
      000360 7B CD            [ 1]  673 	ld	a, (0xcd, sp)
      000362 6B D0            [ 1]  674 	ld	(0xd0, sp), a
      000364 7B CE            [ 1]  675 	ld	a, (0xce, sp)
      000366 6B D1            [ 1]  676 	ld	(0xd1, sp), a
      000368 7B CF            [ 1]  677 	ld	a, (0xcf, sp)
      00036A 6B D2            [ 1]  678 	ld	(0xd2, sp), a
                                    679 ;	src/main.c: 112: for (uint32_t jj = 0; jj < 10000; jj++);
      00036C 90 5F            [ 1]  680 	clrw	y
      00036E 5F               [ 1]  681 	clrw	x
      00036F                        682 00121$:
      00036F 90 A3 27 10      [ 2]  683 	cpw	y, #0x2710
      000373 9F               [ 1]  684 	ld	a, xl
      000374 A2 00            [ 1]  685 	sbc	a, #0x00
      000376 9E               [ 1]  686 	ld	a, xh
      000377 A2 00            [ 1]  687 	sbc	a, #0x00
      000379 25 03            [ 1]  688 	jrc	00176$
      00037B CCr02rAD         [ 2]  689 	jp	00128$
      00037E                        690 00176$:
      00037E 90 5C            [ 1]  691 	incw	y
      000380 26 ED            [ 1]  692 	jrne	00121$
      000382 5C               [ 1]  693 	incw	x
      000383 20 EA            [ 2]  694 	jra	00121$
                                    695 ;	src/main.c: 118: while(1);
                                    696 ;	src/main.c: 119: }
      000385 5B EE            [ 2]  697 	addw	sp, #238
      000387 81               [ 4]  698 	ret
                                    699 ;	src/main.c: 121: void get_next_color(uint8_t *r, uint8_t *g, uint8_t *b, uint8_t step)
                                    700 ;	-----------------------------------------
                                    701 ;	 function get_next_color
                                    702 ;	-----------------------------------------
      000388                        703 _get_next_color:
      000388 52 12            [ 2]  704 	sub	sp, #18
                                    705 ;	src/main.c: 123: while (step--)
      00038A 16 19            [ 2]  706 	ldw	y, (0x19, sp)
      00038C 17 01            [ 2]  707 	ldw	(0x01, sp), y
      00038E 17 03            [ 2]  708 	ldw	(0x03, sp), y
      000390 16 01            [ 2]  709 	ldw	y, (0x01, sp)
      000392 17 05            [ 2]  710 	ldw	(0x05, sp), y
      000394 16 01            [ 2]  711 	ldw	y, (0x01, sp)
      000396 17 07            [ 2]  712 	ldw	(0x07, sp), y
      000398 7B 1B            [ 1]  713 	ld	a, (0x1b, sp)
      00039A 6B 12            [ 1]  714 	ld	(0x12, sp), a
      00039C                        715 00130$:
      00039C 7B 12            [ 1]  716 	ld	a, (0x12, sp)
      00039E 0A 12            [ 1]  717 	dec	(0x12, sp)
      0003A0 4D               [ 1]  718 	tnz	a
      0003A1 26 03            [ 1]  719 	jrne	00236$
      0003A3 CCr04r64         [ 2]  720 	jp	00133$
      0003A6                        721 00236$:
                                    722 ;	src/main.c: 125: if (*r == 255 && *b == 0 && *g < 255)
      0003A6 16 15            [ 2]  723 	ldw	y, (0x15, sp)
      0003A8 17 09            [ 2]  724 	ldw	(0x09, sp), y
      0003AA 93               [ 1]  725 	ldw	x, y
      0003AB F6               [ 1]  726 	ld	a, (x)
      0003AC 6B 0B            [ 1]  727 	ld	(0x0b, sp), a
      0003AE 16 17            [ 2]  728 	ldw	y, (0x17, sp)
                                    729 ;	src/main.c: 127: else if ( *g == 255 && *b == 0 && *r > 0)
      0003B0 17 0C            [ 2]  730 	ldw	(0x0c, sp), y
      0003B2 93               [ 1]  731 	ldw	x, y
      0003B3 F6               [ 1]  732 	ld	a, (x)
      0003B4 6B 0E            [ 1]  733 	ld	(0x0e, sp), a
                                    734 ;	src/main.c: 125: if (*r == 255 && *b == 0 && *g < 255)
      0003B6 7B 0B            [ 1]  735 	ld	a, (0x0b, sp)
      0003B8 4C               [ 1]  736 	inc	a
      0003B9 26 05            [ 1]  737 	jrne	00238$
      0003BB A6 01            [ 1]  738 	ld	a, #0x01
      0003BD 6B 0F            [ 1]  739 	ld	(0x0f, sp), a
      0003BF C5                     740 	.byte 0xc5
      0003C0                        741 00238$:
      0003C0 0F 0F            [ 1]  742 	clr	(0x0f, sp)
      0003C2                        743 00239$:
                                    744 ;	src/main.c: 126: (*g) += 1;
      0003C2 7B 0E            [ 1]  745 	ld	a, (0x0e, sp)
      0003C4 6B 10            [ 1]  746 	ld	(0x10, sp), a
                                    747 ;	src/main.c: 125: if (*r == 255 && *b == 0 && *g < 255)
      0003C6 0D 0F            [ 1]  748 	tnz	(0x0f, sp)
      0003C8 27 13            [ 1]  749 	jreq	00126$
      0003CA 1E 01            [ 2]  750 	ldw	x, (0x01, sp)
      0003CC F6               [ 1]  751 	ld	a, (x)
      0003CD 26 0E            [ 1]  752 	jrne	00126$
      0003CF 7B 0E            [ 1]  753 	ld	a, (0x0e, sp)
      0003D1 A1 FF            [ 1]  754 	cp	a, #0xff
      0003D3 24 08            [ 1]  755 	jrnc	00126$
                                    756 ;	src/main.c: 126: (*g) += 1;
      0003D5 7B 10            [ 1]  757 	ld	a, (0x10, sp)
      0003D7 4C               [ 1]  758 	inc	a
      0003D8 1E 0C            [ 2]  759 	ldw	x, (0x0c, sp)
      0003DA F7               [ 1]  760 	ld	(x), a
      0003DB 20 BF            [ 2]  761 	jra	00130$
      0003DD                        762 00126$:
                                    763 ;	src/main.c: 127: else if ( *g == 255 && *b == 0 && *r > 0)
      0003DD 7B 0E            [ 1]  764 	ld	a, (0x0e, sp)
      0003DF 4C               [ 1]  765 	inc	a
      0003E0 26 05            [ 1]  766 	jrne	00244$
      0003E2 A6 01            [ 1]  767 	ld	a, #0x01
      0003E4 6B 11            [ 1]  768 	ld	(0x11, sp), a
      0003E6 C5                     769 	.byte 0xc5
      0003E7                        770 00244$:
      0003E7 0F 11            [ 1]  771 	clr	(0x11, sp)
      0003E9                        772 00245$:
                                    773 ;	src/main.c: 128: (*r) -= 1;
      0003E9 7B 0B            [ 1]  774 	ld	a, (0x0b, sp)
      0003EB 90 97            [ 1]  775 	ld	yl, a
                                    776 ;	src/main.c: 127: else if ( *g == 255 && *b == 0 && *r > 0)
      0003ED 0D 11            [ 1]  777 	tnz	(0x11, sp)
      0003EF 27 11            [ 1]  778 	jreq	00121$
      0003F1 1E 03            [ 2]  779 	ldw	x, (0x03, sp)
      0003F3 F6               [ 1]  780 	ld	a, (x)
      0003F4 26 0C            [ 1]  781 	jrne	00121$
      0003F6 0D 0B            [ 1]  782 	tnz	(0x0b, sp)
      0003F8 27 08            [ 1]  783 	jreq	00121$
                                    784 ;	src/main.c: 128: (*r) -= 1;
      0003FA 90 9F            [ 1]  785 	ld	a, yl
      0003FC 4A               [ 1]  786 	dec	a
      0003FD 1E 09            [ 2]  787 	ldw	x, (0x09, sp)
      0003FF F7               [ 1]  788 	ld	(x), a
      000400 20 9A            [ 2]  789 	jra	00130$
      000402                        790 00121$:
                                    791 ;	src/main.c: 129: else if (*r == 0 && *g == 255 && *b < 255)
      000402 0D 0B            [ 1]  792 	tnz	(0x0b, sp)
      000404 26 11            [ 1]  793 	jrne	00116$
      000406 0D 11            [ 1]  794 	tnz	(0x11, sp)
      000408 27 0D            [ 1]  795 	jreq	00116$
      00040A 1E 01            [ 2]  796 	ldw	x, (0x01, sp)
      00040C F6               [ 1]  797 	ld	a, (x)
      00040D A1 FF            [ 1]  798 	cp	a, #0xff
      00040F 24 06            [ 1]  799 	jrnc	00116$
                                    800 ;	src/main.c: 130: (*b) += 1;
      000411 4C               [ 1]  801 	inc	a
      000412 1E 01            [ 2]  802 	ldw	x, (0x01, sp)
      000414 F7               [ 1]  803 	ld	(x), a
      000415 20 85            [ 2]  804 	jra	00130$
      000417                        805 00116$:
                                    806 ;	src/main.c: 131: else if (*r == 0 && *b == 255 && *g > 0)
      000417 0D 0B            [ 1]  807 	tnz	(0x0b, sp)
      000419 26 13            [ 1]  808 	jrne	00111$
      00041B 1E 05            [ 2]  809 	ldw	x, (0x05, sp)
      00041D F6               [ 1]  810 	ld	a, (x)
      00041E 4C               [ 1]  811 	inc	a
      00041F 26 0D            [ 1]  812 	jrne	00111$
      000421 0D 0E            [ 1]  813 	tnz	(0x0e, sp)
      000423 27 09            [ 1]  814 	jreq	00111$
                                    815 ;	src/main.c: 132: (*g) -= 1;
      000425 7B 10            [ 1]  816 	ld	a, (0x10, sp)
      000427 4A               [ 1]  817 	dec	a
      000428 1E 0C            [ 2]  818 	ldw	x, (0x0c, sp)
      00042A F7               [ 1]  819 	ld	(x), a
      00042B CCr03r9C         [ 2]  820 	jp	00130$
      00042E                        821 00111$:
                                    822 ;	src/main.c: 133: else if (*g == 0 && *b == 255 && *r < 255)
      00042E 0D 0E            [ 1]  823 	tnz	(0x0e, sp)
      000430 26 15            [ 1]  824 	jrne	00106$
      000432 1E 07            [ 2]  825 	ldw	x, (0x07, sp)
      000434 F6               [ 1]  826 	ld	a, (x)
      000435 4C               [ 1]  827 	inc	a
      000436 26 0F            [ 1]  828 	jrne	00106$
      000438 7B 0B            [ 1]  829 	ld	a, (0x0b, sp)
      00043A A1 FF            [ 1]  830 	cp	a, #0xff
      00043C 24 09            [ 1]  831 	jrnc	00106$
                                    832 ;	src/main.c: 134: (*r) += 1;
      00043E 90 9F            [ 1]  833 	ld	a, yl
      000440 4C               [ 1]  834 	inc	a
      000441 1E 09            [ 2]  835 	ldw	x, (0x09, sp)
      000443 F7               [ 1]  836 	ld	(x), a
      000444 CCr03r9C         [ 2]  837 	jp	00130$
      000447                        838 00106$:
                                    839 ;	src/main.c: 135: else if (*r == 255 && *g == 0 && *b > 0)
      000447 0D 0F            [ 1]  840 	tnz	(0x0f, sp)
      000449 26 03            [ 1]  841 	jrne	00262$
      00044B CCr03r9C         [ 2]  842 	jp	00130$
      00044E                        843 00262$:
      00044E 0D 0E            [ 1]  844 	tnz	(0x0e, sp)
      000450 27 03            [ 1]  845 	jreq	00263$
      000452 CCr03r9C         [ 2]  846 	jp	00130$
      000455                        847 00263$:
      000455 1E 01            [ 2]  848 	ldw	x, (0x01, sp)
      000457 F6               [ 1]  849 	ld	a, (x)
      000458 26 03            [ 1]  850 	jrne	00264$
      00045A CCr03r9C         [ 2]  851 	jp	00130$
      00045D                        852 00264$:
                                    853 ;	src/main.c: 136: (*b) -= 1;
      00045D 4A               [ 1]  854 	dec	a
      00045E 1E 01            [ 2]  855 	ldw	x, (0x01, sp)
      000460 F7               [ 1]  856 	ld	(x), a
      000461 CCr03r9C         [ 2]  857 	jp	00130$
      000464                        858 00133$:
                                    859 ;	src/main.c: 138: }
      000464 5B 12            [ 2]  860 	addw	sp, #18
      000466 81               [ 4]  861 	ret
                                    862 ;	src/main.c: 140: void uart_init()
                                    863 ;	-----------------------------------------
                                    864 ;	 function uart_init
                                    865 ;	-----------------------------------------
      000467                        866 _uart_init:
                                    867 ;	src/main.c: 143: UART1_CR2 |= UART_CR2_TEN; // Transmitter enable
      000467 72 16 52 35      [ 1]  868 	bset	21045, #3
                                    869 ;	src/main.c: 145: UART1_CR3 &= ~(UART_CR3_STOP1 | UART_CR3_STOP2); // 1 stop bit
      00046B C6 52 36         [ 1]  870 	ld	a, 0x5236
      00046E A4 CF            [ 1]  871 	and	a, #0xcf
      000470 C7 52 36         [ 1]  872 	ld	0x5236, a
                                    873 ;	src/main.c: 147: UART1_BRR2 = 0x01; UART1_BRR1 = 0x34; // 0x0341 coded funky way (see page 365 and 336 of ref manual)
      000473 35 01 52 33      [ 1]  874 	mov	0x5233+0, #0x01
      000477 35 34 52 32      [ 1]  875 	mov	0x5232+0, #0x34
                                    876 ;	src/main.c: 148: }
      00047B 81               [ 4]  877 	ret
                                    878 ;	src/main.c: 151: uint16_t uart_write(const char *str) {
                                    879 ;	-----------------------------------------
                                    880 ;	 function uart_write
                                    881 ;	-----------------------------------------
      00047C                        882 _uart_write:
      00047C 52 03            [ 2]  883 	sub	sp, #3
                                    884 ;	src/main.c: 153: for(i = 0; i < strlen(str); i++) {
      00047E 0F 03            [ 1]  885 	clr	(0x03, sp)
      000480                        886 00106$:
      000480 1E 06            [ 2]  887 	ldw	x, (0x06, sp)
      000482 89               [ 2]  888 	pushw	x
      000483 CDr00r00         [ 4]  889 	call	_strlen
      000486 5B 02            [ 2]  890 	addw	sp, #2
      000488 1F 01            [ 2]  891 	ldw	(0x01, sp), x
      00048A 5F               [ 1]  892 	clrw	x
      00048B 7B 03            [ 1]  893 	ld	a, (0x03, sp)
      00048D 97               [ 1]  894 	ld	xl, a
      00048E 13 01            [ 2]  895 	cpw	x, (0x01, sp)
      000490 24 14            [ 1]  896 	jrnc	00104$
                                    897 ;	src/main.c: 154: while(!(UART1_SR & UART_SR_TXE)); // !Transmit data register empty
      000492                        898 00101$:
      000492 C6 52 30         [ 1]  899 	ld	a, 0x5230
      000495 2A FB            [ 1]  900 	jrpl	00101$
                                    901 ;	src/main.c: 155: UART1_DR = str[i];
      000497 5F               [ 1]  902 	clrw	x
      000498 7B 03            [ 1]  903 	ld	a, (0x03, sp)
      00049A 97               [ 1]  904 	ld	xl, a
      00049B 72 FB 06         [ 2]  905 	addw	x, (0x06, sp)
      00049E F6               [ 1]  906 	ld	a, (x)
      00049F C7 52 31         [ 1]  907 	ld	0x5231, a
                                    908 ;	src/main.c: 153: for(i = 0; i < strlen(str); i++) {
      0004A2 0C 03            [ 1]  909 	inc	(0x03, sp)
      0004A4 20 DA            [ 2]  910 	jra	00106$
      0004A6                        911 00104$:
                                    912 ;	src/main.c: 157: return(i); // Bytes sent
      0004A6 7B 03            [ 1]  913 	ld	a, (0x03, sp)
      0004A8 5F               [ 1]  914 	clrw	x
      0004A9 97               [ 1]  915 	ld	xl, a
                                    916 ;	src/main.c: 158: }
      0004AA 5B 03            [ 2]  917 	addw	sp, #3
      0004AC 81               [ 4]  918 	ret
                                    919 ;	src/main.c: 160: void uart_write_8bits(uint8_t d)
                                    920 ;	-----------------------------------------
                                    921 ;	 function uart_write_8bits
                                    922 ;	-----------------------------------------
      0004AD                        923 _uart_write_8bits:
                                    924 ;	src/main.c: 162: while(!(UART1_SR & UART_SR_TXE)); // !Transmit data register empty
      0004AD                        925 00101$:
      0004AD C6 52 30         [ 1]  926 	ld	a, 0x5230
      0004B0 2A FB            [ 1]  927 	jrpl	00101$
                                    928 ;	src/main.c: 163: UART1_DR = d;
      0004B2 AE 52 31         [ 2]  929 	ldw	x, #0x5231
      0004B5 7B 03            [ 1]  930 	ld	a, (0x03, sp)
      0004B7 F7               [ 1]  931 	ld	(x), a
                                    932 ;	src/main.c: 164: }
      0004B8 81               [ 4]  933 	ret
                                    934 ;	src/main.c: 167: void int_to_hex_str(uint32_t dec, char *hex_str, uint8_t hex_str_len)
                                    935 ;	-----------------------------------------
                                    936 ;	 function int_to_hex_str
                                    937 ;	-----------------------------------------
      0004B9                        938 _int_to_hex_str:
      0004B9 52 03            [ 2]  939 	sub	sp, #3
                                    940 ;	src/main.c: 170: while(hex_str_len)
      0004BB 7B 0C            [ 1]  941 	ld	a, (0x0c, sp)
      0004BD 6B 03            [ 1]  942 	ld	(0x03, sp), a
      0004BF                        943 00101$:
      0004BF 0D 03            [ 1]  944 	tnz	(0x03, sp)
      0004C1 27 37            [ 1]  945 	jreq	00104$
                                    946 ;	src/main.c: 172: uint8_t masked_dec = (dec & mask);
      0004C3 7B 09            [ 1]  947 	ld	a, (0x09, sp)
      0004C5 A4 0F            [ 1]  948 	and	a, #0x0f
                                    949 ;	src/main.c: 173: hex_str[hex_str_len - 1] = (masked_dec < 10) ? (masked_dec + '0') : (masked_dec + '7');
      0004C7 5F               [ 1]  950 	clrw	x
      0004C8 41               [ 1]  951 	exg	a, xl
      0004C9 7B 03            [ 1]  952 	ld	a, (0x03, sp)
      0004CB 41               [ 1]  953 	exg	a, xl
      0004CC 5A               [ 2]  954 	decw	x
      0004CD 72 FB 0A         [ 2]  955 	addw	x, (0x0a, sp)
      0004D0 1F 01            [ 2]  956 	ldw	(0x01, sp), x
      0004D2 97               [ 1]  957 	ld	xl, a
      0004D3 A1 0A            [ 1]  958 	cp	a, #0x0a
      0004D5 24 05            [ 1]  959 	jrnc	00106$
      0004D7 9F               [ 1]  960 	ld	a, xl
      0004D8 AB 30            [ 1]  961 	add	a, #0x30
      0004DA 20 03            [ 2]  962 	jra	00107$
      0004DC                        963 00106$:
      0004DC 9F               [ 1]  964 	ld	a, xl
      0004DD AB 37            [ 1]  965 	add	a, #0x37
      0004DF                        966 00107$:
      0004DF 1E 01            [ 2]  967 	ldw	x, (0x01, sp)
      0004E1 F7               [ 1]  968 	ld	(x), a
                                    969 ;	src/main.c: 175: dec >>= 4;
      0004E2 1E 08            [ 2]  970 	ldw	x, (0x08, sp)
      0004E4 16 06            [ 2]  971 	ldw	y, (0x06, sp)
      0004E6 90 54            [ 2]  972 	srlw	y
      0004E8 56               [ 2]  973 	rrcw	x
      0004E9 90 54            [ 2]  974 	srlw	y
      0004EB 56               [ 2]  975 	rrcw	x
      0004EC 90 54            [ 2]  976 	srlw	y
      0004EE 56               [ 2]  977 	rrcw	x
      0004EF 90 54            [ 2]  978 	srlw	y
      0004F1 56               [ 2]  979 	rrcw	x
      0004F2 1F 08            [ 2]  980 	ldw	(0x08, sp), x
      0004F4 17 06            [ 2]  981 	ldw	(0x06, sp), y
                                    982 ;	src/main.c: 176: hex_str_len--;
      0004F6 0A 03            [ 1]  983 	dec	(0x03, sp)
      0004F8 20 C5            [ 2]  984 	jra	00101$
      0004FA                        985 00104$:
                                    986 ;	src/main.c: 178: }
      0004FA 5B 03            [ 2]  987 	addw	sp, #3
      0004FC 81               [ 4]  988 	ret
                                    989 	.area CODE
                                    990 	.area CONST
      000000                        991 _CIE_CORRECTION:
      000000 00                     992 	.db #0x00	; 0
      000001 00                     993 	.db #0x00	; 0
      000002 00                     994 	.db #0x00	; 0
      000003 00                     995 	.db #0x00	; 0
      000004 00                     996 	.db #0x00	; 0
      000005 01                     997 	.db #0x01	; 1
      000006 01                     998 	.db #0x01	; 1
      000007 01                     999 	.db #0x01	; 1
      000008 01                    1000 	.db #0x01	; 1
      000009 01                    1001 	.db #0x01	; 1
      00000A 01                    1002 	.db #0x01	; 1
      00000B 01                    1003 	.db #0x01	; 1
      00000C 01                    1004 	.db #0x01	; 1
      00000D 01                    1005 	.db #0x01	; 1
      00000E 02                    1006 	.db #0x02	; 2
      00000F 02                    1007 	.db #0x02	; 2
      000010 02                    1008 	.db #0x02	; 2
      000011 02                    1009 	.db #0x02	; 2
      000012 02                    1010 	.db #0x02	; 2
      000013 02                    1011 	.db #0x02	; 2
      000014 02                    1012 	.db #0x02	; 2
      000015 02                    1013 	.db #0x02	; 2
      000016 02                    1014 	.db #0x02	; 2
      000017 03                    1015 	.db #0x03	; 3
      000018 03                    1016 	.db #0x03	; 3
      000019 03                    1017 	.db #0x03	; 3
      00001A 03                    1018 	.db #0x03	; 3
      00001B 03                    1019 	.db #0x03	; 3
      00001C 03                    1020 	.db #0x03	; 3
      00001D 03                    1021 	.db #0x03	; 3
      00001E 03                    1022 	.db #0x03	; 3
      00001F 04                    1023 	.db #0x04	; 4
      000020 04                    1024 	.db #0x04	; 4
      000021 04                    1025 	.db #0x04	; 4
      000022 04                    1026 	.db #0x04	; 4
      000023 04                    1027 	.db #0x04	; 4
      000024 04                    1028 	.db #0x04	; 4
      000025 05                    1029 	.db #0x05	; 5
      000026 05                    1030 	.db #0x05	; 5
      000027 05                    1031 	.db #0x05	; 5
      000028 05                    1032 	.db #0x05	; 5
      000029 05                    1033 	.db #0x05	; 5
      00002A 06                    1034 	.db #0x06	; 6
      00002B 06                    1035 	.db #0x06	; 6
      00002C 06                    1036 	.db #0x06	; 6
      00002D 06                    1037 	.db #0x06	; 6
      00002E 06                    1038 	.db #0x06	; 6
      00002F 07                    1039 	.db #0x07	; 7
      000030 07                    1040 	.db #0x07	; 7
      000031 07                    1041 	.db #0x07	; 7
      000032 07                    1042 	.db #0x07	; 7
      000033 08                    1043 	.db #0x08	; 8
      000034 08                    1044 	.db #0x08	; 8
      000035 08                    1045 	.db #0x08	; 8
      000036 08                    1046 	.db #0x08	; 8
      000037 09                    1047 	.db #0x09	; 9
      000038 09                    1048 	.db #0x09	; 9
      000039 09                    1049 	.db #0x09	; 9
      00003A 0A                    1050 	.db #0x0a	; 10
      00003B 0A                    1051 	.db #0x0a	; 10
      00003C 0A                    1052 	.db #0x0a	; 10
      00003D 0A                    1053 	.db #0x0a	; 10
      00003E 0B                    1054 	.db #0x0b	; 11
      00003F 0B                    1055 	.db #0x0b	; 11
      000040 0B                    1056 	.db #0x0b	; 11
      000041 0C                    1057 	.db #0x0c	; 12
      000042 0C                    1058 	.db #0x0c	; 12
      000043 0C                    1059 	.db #0x0c	; 12
      000044 0D                    1060 	.db #0x0d	; 13
      000045 0D                    1061 	.db #0x0d	; 13
      000046 0D                    1062 	.db #0x0d	; 13
      000047 0E                    1063 	.db #0x0e	; 14
      000048 0E                    1064 	.db #0x0e	; 14
      000049 0F                    1065 	.db #0x0f	; 15
      00004A 0F                    1066 	.db #0x0f	; 15
      00004B 0F                    1067 	.db #0x0f	; 15
      00004C 10                    1068 	.db #0x10	; 16
      00004D 10                    1069 	.db #0x10	; 16
      00004E 11                    1070 	.db #0x11	; 17
      00004F 11                    1071 	.db #0x11	; 17
      000050 11                    1072 	.db #0x11	; 17
      000051 12                    1073 	.db #0x12	; 18
      000052 12                    1074 	.db #0x12	; 18
      000053 13                    1075 	.db #0x13	; 19
      000054 13                    1076 	.db #0x13	; 19
      000055 14                    1077 	.db #0x14	; 20
      000056 14                    1078 	.db #0x14	; 20
      000057 15                    1079 	.db #0x15	; 21
      000058 15                    1080 	.db #0x15	; 21
      000059 16                    1081 	.db #0x16	; 22
      00005A 16                    1082 	.db #0x16	; 22
      00005B 17                    1083 	.db #0x17	; 23
      00005C 17                    1084 	.db #0x17	; 23
      00005D 18                    1085 	.db #0x18	; 24
      00005E 18                    1086 	.db #0x18	; 24
      00005F 19                    1087 	.db #0x19	; 25
      000060 19                    1088 	.db #0x19	; 25
      000061 1A                    1089 	.db #0x1a	; 26
      000062 1A                    1090 	.db #0x1a	; 26
      000063 1B                    1091 	.db #0x1b	; 27
      000064 1C                    1092 	.db #0x1c	; 28
      000065 1C                    1093 	.db #0x1c	; 28
      000066 1D                    1094 	.db #0x1d	; 29
      000067 1D                    1095 	.db #0x1d	; 29
      000068 1E                    1096 	.db #0x1e	; 30
      000069 1F                    1097 	.db #0x1f	; 31
      00006A 1F                    1098 	.db #0x1f	; 31
      00006B 20                    1099 	.db #0x20	; 32
      00006C 20                    1100 	.db #0x20	; 32
      00006D 21                    1101 	.db #0x21	; 33
      00006E 22                    1102 	.db #0x22	; 34
      00006F 22                    1103 	.db #0x22	; 34
      000070 23                    1104 	.db #0x23	; 35
      000071 24                    1105 	.db #0x24	; 36
      000072 25                    1106 	.db #0x25	; 37
      000073 25                    1107 	.db #0x25	; 37
      000074 26                    1108 	.db #0x26	; 38
      000075 27                    1109 	.db #0x27	; 39
      000076 27                    1110 	.db #0x27	; 39
      000077 28                    1111 	.db #0x28	; 40
      000078 29                    1112 	.db #0x29	; 41
      000079 2A                    1113 	.db #0x2a	; 42
      00007A 2B                    1114 	.db #0x2b	; 43
      00007B 2B                    1115 	.db #0x2b	; 43
      00007C 2C                    1116 	.db #0x2c	; 44
      00007D 2D                    1117 	.db #0x2d	; 45
      00007E 2E                    1118 	.db #0x2e	; 46
      00007F 2F                    1119 	.db #0x2f	; 47
      000080 2F                    1120 	.db #0x2f	; 47
      000081 30                    1121 	.db #0x30	; 48	'0'
      000082 31                    1122 	.db #0x31	; 49	'1'
      000083 32                    1123 	.db #0x32	; 50	'2'
      000084 33                    1124 	.db #0x33	; 51	'3'
      000085 34                    1125 	.db #0x34	; 52	'4'
      000086 35                    1126 	.db #0x35	; 53	'5'
      000087 36                    1127 	.db #0x36	; 54	'6'
      000088 36                    1128 	.db #0x36	; 54	'6'
      000089 37                    1129 	.db #0x37	; 55	'7'
      00008A 38                    1130 	.db #0x38	; 56	'8'
      00008B 39                    1131 	.db #0x39	; 57	'9'
      00008C 3A                    1132 	.db #0x3a	; 58
      00008D 3B                    1133 	.db #0x3b	; 59
      00008E 3C                    1134 	.db #0x3c	; 60
      00008F 3D                    1135 	.db #0x3d	; 61
      000090 3E                    1136 	.db #0x3e	; 62
      000091 3F                    1137 	.db #0x3f	; 63
      000092 40                    1138 	.db #0x40	; 64
      000093 41                    1139 	.db #0x41	; 65	'A'
      000094 42                    1140 	.db #0x42	; 66	'B'
      000095 43                    1141 	.db #0x43	; 67	'C'
      000096 44                    1142 	.db #0x44	; 68	'D'
      000097 46                    1143 	.db #0x46	; 70	'F'
      000098 47                    1144 	.db #0x47	; 71	'G'
      000099 48                    1145 	.db #0x48	; 72	'H'
      00009A 49                    1146 	.db #0x49	; 73	'I'
      00009B 4A                    1147 	.db #0x4a	; 74	'J'
      00009C 4B                    1148 	.db #0x4b	; 75	'K'
      00009D 4C                    1149 	.db #0x4c	; 76	'L'
      00009E 4D                    1150 	.db #0x4d	; 77	'M'
      00009F 4F                    1151 	.db #0x4f	; 79	'O'
      0000A0 50                    1152 	.db #0x50	; 80	'P'
      0000A1 51                    1153 	.db #0x51	; 81	'Q'
      0000A2 52                    1154 	.db #0x52	; 82	'R'
      0000A3 53                    1155 	.db #0x53	; 83	'S'
      0000A4 55                    1156 	.db #0x55	; 85	'U'
      0000A5 56                    1157 	.db #0x56	; 86	'V'
      0000A6 57                    1158 	.db #0x57	; 87	'W'
      0000A7 58                    1159 	.db #0x58	; 88	'X'
      0000A8 5A                    1160 	.db #0x5a	; 90	'Z'
      0000A9 5B                    1161 	.db #0x5b	; 91
      0000AA 5C                    1162 	.db #0x5c	; 92
      0000AB 5E                    1163 	.db #0x5e	; 94
      0000AC 5F                    1164 	.db #0x5f	; 95
      0000AD 60                    1165 	.db #0x60	; 96
      0000AE 62                    1166 	.db #0x62	; 98	'b'
      0000AF 63                    1167 	.db #0x63	; 99	'c'
      0000B0 64                    1168 	.db #0x64	; 100	'd'
      0000B1 66                    1169 	.db #0x66	; 102	'f'
      0000B2 67                    1170 	.db #0x67	; 103	'g'
      0000B3 69                    1171 	.db #0x69	; 105	'i'
      0000B4 6A                    1172 	.db #0x6a	; 106	'j'
      0000B5 6C                    1173 	.db #0x6c	; 108	'l'
      0000B6 6D                    1174 	.db #0x6d	; 109	'm'
      0000B7 6E                    1175 	.db #0x6e	; 110	'n'
      0000B8 70                    1176 	.db #0x70	; 112	'p'
      0000B9 71                    1177 	.db #0x71	; 113	'q'
      0000BA 73                    1178 	.db #0x73	; 115	's'
      0000BB 74                    1179 	.db #0x74	; 116	't'
      0000BC 76                    1180 	.db #0x76	; 118	'v'
      0000BD 78                    1181 	.db #0x78	; 120	'x'
      0000BE 79                    1182 	.db #0x79	; 121	'y'
      0000BF 7B                    1183 	.db #0x7b	; 123
      0000C0 7C                    1184 	.db #0x7c	; 124
      0000C1 7E                    1185 	.db #0x7e	; 126
      0000C2 80                    1186 	.db #0x80	; 128
      0000C3 81                    1187 	.db #0x81	; 129
      0000C4 83                    1188 	.db #0x83	; 131
      0000C5 84                    1189 	.db #0x84	; 132
      0000C6 86                    1190 	.db #0x86	; 134
      0000C7 88                    1191 	.db #0x88	; 136
      0000C8 8A                    1192 	.db #0x8a	; 138
      0000C9 8B                    1193 	.db #0x8b	; 139
      0000CA 8D                    1194 	.db #0x8d	; 141
      0000CB 8F                    1195 	.db #0x8f	; 143
      0000CC 91                    1196 	.db #0x91	; 145
      0000CD 92                    1197 	.db #0x92	; 146
      0000CE 94                    1198 	.db #0x94	; 148
      0000CF 96                    1199 	.db #0x96	; 150
      0000D0 98                    1200 	.db #0x98	; 152
      0000D1 9A                    1201 	.db #0x9a	; 154
      0000D2 9B                    1202 	.db #0x9b	; 155
      0000D3 9D                    1203 	.db #0x9d	; 157
      0000D4 9F                    1204 	.db #0x9f	; 159
      0000D5 A1                    1205 	.db #0xa1	; 161
      0000D6 A3                    1206 	.db #0xa3	; 163
      0000D7 A5                    1207 	.db #0xa5	; 165
      0000D8 A7                    1208 	.db #0xa7	; 167
      0000D9 A9                    1209 	.db #0xa9	; 169
      0000DA AB                    1210 	.db #0xab	; 171
      0000DB AD                    1211 	.db #0xad	; 173
      0000DC AF                    1212 	.db #0xaf	; 175
      0000DD B1                    1213 	.db #0xb1	; 177
      0000DE B3                    1214 	.db #0xb3	; 179
      0000DF B5                    1215 	.db #0xb5	; 181
      0000E0 B7                    1216 	.db #0xb7	; 183
      0000E1 B9                    1217 	.db #0xb9	; 185
      0000E2 BB                    1218 	.db #0xbb	; 187
      0000E3 BD                    1219 	.db #0xbd	; 189
      0000E4 BF                    1220 	.db #0xbf	; 191
      0000E5 C1                    1221 	.db #0xc1	; 193
      0000E6 C4                    1222 	.db #0xc4	; 196
      0000E7 C6                    1223 	.db #0xc6	; 198
      0000E8 C8                    1224 	.db #0xc8	; 200
      0000E9 CA                    1225 	.db #0xca	; 202
      0000EA CC                    1226 	.db #0xcc	; 204
      0000EB CF                    1227 	.db #0xcf	; 207
      0000EC D1                    1228 	.db #0xd1	; 209
      0000ED D3                    1229 	.db #0xd3	; 211
      0000EE D6                    1230 	.db #0xd6	; 214
      0000EF D8                    1231 	.db #0xd8	; 216
      0000F0 DA                    1232 	.db #0xda	; 218
      0000F1 DC                    1233 	.db #0xdc	; 220
      0000F2 DF                    1234 	.db #0xdf	; 223
      0000F3 E1                    1235 	.db #0xe1	; 225
      0000F4 E4                    1236 	.db #0xe4	; 228
      0000F5 E6                    1237 	.db #0xe6	; 230
      0000F6 E8                    1238 	.db #0xe8	; 232
      0000F7 EB                    1239 	.db #0xeb	; 235
      0000F8 ED                    1240 	.db #0xed	; 237
      0000F9 F0                    1241 	.db #0xf0	; 240
      0000FA F2                    1242 	.db #0xf2	; 242
      0000FB F5                    1243 	.db #0xf5	; 245
      0000FC F7                    1244 	.db #0xf7	; 247
      0000FD FA                    1245 	.db #0xfa	; 250
      0000FE FC                    1246 	.db #0xfc	; 252
      0000FF FF                    1247 	.db #0xff	; 255
                                   1248 	.area INITIALIZER
                                   1249 	.area CABS (ABS)
