                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _flash_write_enable
                                     13 	.globl _flash_erase_block
                                     14 	.globl _flash_busy_wait
                                     15 	.globl _flash_read_from_addr
                                     16 	.globl _flash_write_to_addr
                                     17 	.globl _spi_config
                                     18 	.globl _strlen
                                     19 	.globl _uart_init
                                     20 	.globl _gpio_init
                                     21 	.globl _uart_write
                                     22 	.globl _uart_write_8bits
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DATA
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area INITIALIZED
                                     31 ;--------------------------------------------------------
                                     32 ; Stack segment in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 	.area	SSEG
      000000                         35 __start__stack:
      000000                         36 	.ds	1
                                     37 
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS (ABS)
                                     42 
                                     43 ; default segment ordering for linker
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area CONST
                                     48 	.area INITIALIZER
                                     49 	.area CODE
                                     50 
                                     51 ;--------------------------------------------------------
                                     52 ; interrupt vector 
                                     53 ;--------------------------------------------------------
                                     54 	.area HOME
      000000                         55 __interrupt_vect:
      000000 82v00u00u00             56 	int s_GSINIT ; reset
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area HOME
                                     61 	.area GSINIT
                                     62 	.area GSFINAL
                                     63 	.area GSINIT
      000000                         64 __sdcc_gs_init_startup:
      000000                         65 __sdcc_init_data:
                                     66 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   67 	ldw x, #l_DATA
      000003 27 07            [ 1]   68 	jreq	00002$
      000005                         69 00001$:
      000005 72 4FuFFuFF      [ 1]   70 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   71 	decw x
      00000A 26 F9            [ 1]   72 	jrne	00001$
      00000C                         73 00002$:
      00000C AEr00r00         [ 2]   74 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   75 	jreq	00004$
      000011                         76 00003$:
      000011 D6uFFuFF         [ 1]   77 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   78 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   79 	decw	x
      000018 26 F7            [ 1]   80 	jrne	00003$
      00001A                         81 00004$:
                                     82 ; stm8_genXINIT() end
                                     83 	.area GSFINAL
      000000 CCr00r04         [ 2]   84 	jp	__sdcc_program_startup
                                     85 ;--------------------------------------------------------
                                     86 ; Home
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME
                                     89 	.area HOME
      000004                         90 __sdcc_program_startup:
      000004 CCr00r00         [ 2]   91 	jp	_main
                                     92 ;	return from main will return to caller
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CODE
                                     97 ;	src/main.c: 15: void main(void)
                                     98 ;	-----------------------------------------
                                     99 ;	 function main
                                    100 ;	-----------------------------------------
      000000                        101 _main:
      000000 52 C9            [ 2]  102 	sub	sp, #201
                                    103 ;	src/main.c: 18: CLK_CKDIVR = 0;
      000002 35 00 50 C6      [ 1]  104 	mov	0x50c6+0, #0x00
                                    105 ;	src/main.c: 19: uart_init();
      000006 CDr03r19         [ 4]  106 	call	_uart_init
                                    107 ;	src/main.c: 21: uint8_t buff[100] = {0};
      000009 0F 01            [ 1]  108 	clr	(0x01, sp)
      00000B 96               [ 1]  109 	ldw	x, sp
      00000C 6F 02            [ 1]  110 	clr	(2, x)
      00000E 96               [ 1]  111 	ldw	x, sp
      00000F 6F 03            [ 1]  112 	clr	(3, x)
      000011 96               [ 1]  113 	ldw	x, sp
      000012 6F 04            [ 1]  114 	clr	(4, x)
      000014 96               [ 1]  115 	ldw	x, sp
      000015 6F 05            [ 1]  116 	clr	(5, x)
      000017 96               [ 1]  117 	ldw	x, sp
      000018 6F 06            [ 1]  118 	clr	(6, x)
      00001A 96               [ 1]  119 	ldw	x, sp
      00001B 6F 07            [ 1]  120 	clr	(7, x)
      00001D 96               [ 1]  121 	ldw	x, sp
      00001E 6F 08            [ 1]  122 	clr	(8, x)
      000020 96               [ 1]  123 	ldw	x, sp
      000021 6F 09            [ 1]  124 	clr	(9, x)
      000023 96               [ 1]  125 	ldw	x, sp
      000024 6F 0A            [ 1]  126 	clr	(10, x)
      000026 96               [ 1]  127 	ldw	x, sp
      000027 6F 0B            [ 1]  128 	clr	(11, x)
      000029 96               [ 1]  129 	ldw	x, sp
      00002A 6F 0C            [ 1]  130 	clr	(12, x)
      00002C 96               [ 1]  131 	ldw	x, sp
      00002D 6F 0D            [ 1]  132 	clr	(13, x)
      00002F 96               [ 1]  133 	ldw	x, sp
      000030 6F 0E            [ 1]  134 	clr	(14, x)
      000032 96               [ 1]  135 	ldw	x, sp
      000033 6F 0F            [ 1]  136 	clr	(15, x)
      000035 96               [ 1]  137 	ldw	x, sp
      000036 6F 10            [ 1]  138 	clr	(16, x)
      000038 96               [ 1]  139 	ldw	x, sp
      000039 6F 11            [ 1]  140 	clr	(17, x)
      00003B 96               [ 1]  141 	ldw	x, sp
      00003C 6F 12            [ 1]  142 	clr	(18, x)
      00003E 96               [ 1]  143 	ldw	x, sp
      00003F 6F 13            [ 1]  144 	clr	(19, x)
      000041 96               [ 1]  145 	ldw	x, sp
      000042 6F 14            [ 1]  146 	clr	(20, x)
      000044 96               [ 1]  147 	ldw	x, sp
      000045 6F 15            [ 1]  148 	clr	(21, x)
      000047 96               [ 1]  149 	ldw	x, sp
      000048 6F 16            [ 1]  150 	clr	(22, x)
      00004A 96               [ 1]  151 	ldw	x, sp
      00004B 6F 17            [ 1]  152 	clr	(23, x)
      00004D 96               [ 1]  153 	ldw	x, sp
      00004E 6F 18            [ 1]  154 	clr	(24, x)
      000050 96               [ 1]  155 	ldw	x, sp
      000051 6F 19            [ 1]  156 	clr	(25, x)
      000053 96               [ 1]  157 	ldw	x, sp
      000054 6F 1A            [ 1]  158 	clr	(26, x)
      000056 96               [ 1]  159 	ldw	x, sp
      000057 6F 1B            [ 1]  160 	clr	(27, x)
      000059 96               [ 1]  161 	ldw	x, sp
      00005A 6F 1C            [ 1]  162 	clr	(28, x)
      00005C 96               [ 1]  163 	ldw	x, sp
      00005D 6F 1D            [ 1]  164 	clr	(29, x)
      00005F 96               [ 1]  165 	ldw	x, sp
      000060 6F 1E            [ 1]  166 	clr	(30, x)
      000062 96               [ 1]  167 	ldw	x, sp
      000063 6F 1F            [ 1]  168 	clr	(31, x)
      000065 96               [ 1]  169 	ldw	x, sp
      000066 6F 20            [ 1]  170 	clr	(32, x)
      000068 96               [ 1]  171 	ldw	x, sp
      000069 6F 21            [ 1]  172 	clr	(33, x)
      00006B 96               [ 1]  173 	ldw	x, sp
      00006C 6F 22            [ 1]  174 	clr	(34, x)
      00006E 96               [ 1]  175 	ldw	x, sp
      00006F 6F 23            [ 1]  176 	clr	(35, x)
      000071 96               [ 1]  177 	ldw	x, sp
      000072 6F 24            [ 1]  178 	clr	(36, x)
      000074 96               [ 1]  179 	ldw	x, sp
      000075 6F 25            [ 1]  180 	clr	(37, x)
      000077 96               [ 1]  181 	ldw	x, sp
      000078 6F 26            [ 1]  182 	clr	(38, x)
      00007A 96               [ 1]  183 	ldw	x, sp
      00007B 6F 27            [ 1]  184 	clr	(39, x)
      00007D 96               [ 1]  185 	ldw	x, sp
      00007E 6F 28            [ 1]  186 	clr	(40, x)
      000080 96               [ 1]  187 	ldw	x, sp
      000081 6F 29            [ 1]  188 	clr	(41, x)
      000083 96               [ 1]  189 	ldw	x, sp
      000084 6F 2A            [ 1]  190 	clr	(42, x)
      000086 96               [ 1]  191 	ldw	x, sp
      000087 6F 2B            [ 1]  192 	clr	(43, x)
      000089 96               [ 1]  193 	ldw	x, sp
      00008A 6F 2C            [ 1]  194 	clr	(44, x)
      00008C 96               [ 1]  195 	ldw	x, sp
      00008D 6F 2D            [ 1]  196 	clr	(45, x)
      00008F 96               [ 1]  197 	ldw	x, sp
      000090 6F 2E            [ 1]  198 	clr	(46, x)
      000092 96               [ 1]  199 	ldw	x, sp
      000093 6F 2F            [ 1]  200 	clr	(47, x)
      000095 96               [ 1]  201 	ldw	x, sp
      000096 6F 30            [ 1]  202 	clr	(48, x)
      000098 96               [ 1]  203 	ldw	x, sp
      000099 6F 31            [ 1]  204 	clr	(49, x)
      00009B 96               [ 1]  205 	ldw	x, sp
      00009C 6F 32            [ 1]  206 	clr	(50, x)
      00009E 96               [ 1]  207 	ldw	x, sp
      00009F 6F 33            [ 1]  208 	clr	(51, x)
      0000A1 96               [ 1]  209 	ldw	x, sp
      0000A2 6F 34            [ 1]  210 	clr	(52, x)
      0000A4 96               [ 1]  211 	ldw	x, sp
      0000A5 6F 35            [ 1]  212 	clr	(53, x)
      0000A7 96               [ 1]  213 	ldw	x, sp
      0000A8 6F 36            [ 1]  214 	clr	(54, x)
      0000AA 96               [ 1]  215 	ldw	x, sp
      0000AB 6F 37            [ 1]  216 	clr	(55, x)
      0000AD 96               [ 1]  217 	ldw	x, sp
      0000AE 6F 38            [ 1]  218 	clr	(56, x)
      0000B0 96               [ 1]  219 	ldw	x, sp
      0000B1 6F 39            [ 1]  220 	clr	(57, x)
      0000B3 96               [ 1]  221 	ldw	x, sp
      0000B4 6F 3A            [ 1]  222 	clr	(58, x)
      0000B6 96               [ 1]  223 	ldw	x, sp
      0000B7 6F 3B            [ 1]  224 	clr	(59, x)
      0000B9 96               [ 1]  225 	ldw	x, sp
      0000BA 6F 3C            [ 1]  226 	clr	(60, x)
      0000BC 96               [ 1]  227 	ldw	x, sp
      0000BD 6F 3D            [ 1]  228 	clr	(61, x)
      0000BF 96               [ 1]  229 	ldw	x, sp
      0000C0 6F 3E            [ 1]  230 	clr	(62, x)
      0000C2 96               [ 1]  231 	ldw	x, sp
      0000C3 6F 3F            [ 1]  232 	clr	(63, x)
      0000C5 96               [ 1]  233 	ldw	x, sp
      0000C6 6F 40            [ 1]  234 	clr	(64, x)
      0000C8 96               [ 1]  235 	ldw	x, sp
      0000C9 6F 41            [ 1]  236 	clr	(65, x)
      0000CB 96               [ 1]  237 	ldw	x, sp
      0000CC 6F 42            [ 1]  238 	clr	(66, x)
      0000CE 96               [ 1]  239 	ldw	x, sp
      0000CF 6F 43            [ 1]  240 	clr	(67, x)
      0000D1 96               [ 1]  241 	ldw	x, sp
      0000D2 6F 44            [ 1]  242 	clr	(68, x)
      0000D4 96               [ 1]  243 	ldw	x, sp
      0000D5 6F 45            [ 1]  244 	clr	(69, x)
      0000D7 96               [ 1]  245 	ldw	x, sp
      0000D8 6F 46            [ 1]  246 	clr	(70, x)
      0000DA 96               [ 1]  247 	ldw	x, sp
      0000DB 6F 47            [ 1]  248 	clr	(71, x)
      0000DD 96               [ 1]  249 	ldw	x, sp
      0000DE 6F 48            [ 1]  250 	clr	(72, x)
      0000E0 96               [ 1]  251 	ldw	x, sp
      0000E1 6F 49            [ 1]  252 	clr	(73, x)
      0000E3 96               [ 1]  253 	ldw	x, sp
      0000E4 6F 4A            [ 1]  254 	clr	(74, x)
      0000E6 96               [ 1]  255 	ldw	x, sp
      0000E7 6F 4B            [ 1]  256 	clr	(75, x)
      0000E9 96               [ 1]  257 	ldw	x, sp
      0000EA 6F 4C            [ 1]  258 	clr	(76, x)
      0000EC 96               [ 1]  259 	ldw	x, sp
      0000ED 6F 4D            [ 1]  260 	clr	(77, x)
      0000EF 96               [ 1]  261 	ldw	x, sp
      0000F0 6F 4E            [ 1]  262 	clr	(78, x)
      0000F2 96               [ 1]  263 	ldw	x, sp
      0000F3 6F 4F            [ 1]  264 	clr	(79, x)
      0000F5 96               [ 1]  265 	ldw	x, sp
      0000F6 6F 50            [ 1]  266 	clr	(80, x)
      0000F8 96               [ 1]  267 	ldw	x, sp
      0000F9 6F 51            [ 1]  268 	clr	(81, x)
      0000FB 96               [ 1]  269 	ldw	x, sp
      0000FC 6F 52            [ 1]  270 	clr	(82, x)
      0000FE 96               [ 1]  271 	ldw	x, sp
      0000FF 6F 53            [ 1]  272 	clr	(83, x)
      000101 96               [ 1]  273 	ldw	x, sp
      000102 6F 54            [ 1]  274 	clr	(84, x)
      000104 96               [ 1]  275 	ldw	x, sp
      000105 6F 55            [ 1]  276 	clr	(85, x)
      000107 96               [ 1]  277 	ldw	x, sp
      000108 6F 56            [ 1]  278 	clr	(86, x)
      00010A 96               [ 1]  279 	ldw	x, sp
      00010B 6F 57            [ 1]  280 	clr	(87, x)
      00010D 96               [ 1]  281 	ldw	x, sp
      00010E 6F 58            [ 1]  282 	clr	(88, x)
      000110 96               [ 1]  283 	ldw	x, sp
      000111 6F 59            [ 1]  284 	clr	(89, x)
      000113 96               [ 1]  285 	ldw	x, sp
      000114 6F 5A            [ 1]  286 	clr	(90, x)
      000116 96               [ 1]  287 	ldw	x, sp
      000117 6F 5B            [ 1]  288 	clr	(91, x)
      000119 96               [ 1]  289 	ldw	x, sp
      00011A 6F 5C            [ 1]  290 	clr	(92, x)
      00011C 96               [ 1]  291 	ldw	x, sp
      00011D 6F 5D            [ 1]  292 	clr	(93, x)
      00011F 96               [ 1]  293 	ldw	x, sp
      000120 6F 5E            [ 1]  294 	clr	(94, x)
      000122 96               [ 1]  295 	ldw	x, sp
      000123 6F 5F            [ 1]  296 	clr	(95, x)
      000125 96               [ 1]  297 	ldw	x, sp
      000126 6F 60            [ 1]  298 	clr	(96, x)
      000128 96               [ 1]  299 	ldw	x, sp
      000129 6F 61            [ 1]  300 	clr	(97, x)
      00012B 96               [ 1]  301 	ldw	x, sp
      00012C 6F 62            [ 1]  302 	clr	(98, x)
      00012E 96               [ 1]  303 	ldw	x, sp
      00012F 6F 63            [ 1]  304 	clr	(99, x)
      000131 96               [ 1]  305 	ldw	x, sp
      000132 6F 64            [ 1]  306 	clr	(100, x)
                                    307 ;	src/main.c: 22: uint8_t buff2[100] = {0};
      000134 0F 65            [ 1]  308 	clr	(0x65, sp)
      000136 96               [ 1]  309 	ldw	x, sp
      000137 6F 66            [ 1]  310 	clr	(102, x)
      000139 96               [ 1]  311 	ldw	x, sp
      00013A 6F 67            [ 1]  312 	clr	(103, x)
      00013C 96               [ 1]  313 	ldw	x, sp
      00013D 6F 68            [ 1]  314 	clr	(104, x)
      00013F 96               [ 1]  315 	ldw	x, sp
      000140 6F 69            [ 1]  316 	clr	(105, x)
      000142 96               [ 1]  317 	ldw	x, sp
      000143 6F 6A            [ 1]  318 	clr	(106, x)
      000145 96               [ 1]  319 	ldw	x, sp
      000146 6F 6B            [ 1]  320 	clr	(107, x)
      000148 96               [ 1]  321 	ldw	x, sp
      000149 6F 6C            [ 1]  322 	clr	(108, x)
      00014B 96               [ 1]  323 	ldw	x, sp
      00014C 6F 6D            [ 1]  324 	clr	(109, x)
      00014E 96               [ 1]  325 	ldw	x, sp
      00014F 6F 6E            [ 1]  326 	clr	(110, x)
      000151 96               [ 1]  327 	ldw	x, sp
      000152 6F 6F            [ 1]  328 	clr	(111, x)
      000154 96               [ 1]  329 	ldw	x, sp
      000155 6F 70            [ 1]  330 	clr	(112, x)
      000157 96               [ 1]  331 	ldw	x, sp
      000158 6F 71            [ 1]  332 	clr	(113, x)
      00015A 96               [ 1]  333 	ldw	x, sp
      00015B 6F 72            [ 1]  334 	clr	(114, x)
      00015D 96               [ 1]  335 	ldw	x, sp
      00015E 6F 73            [ 1]  336 	clr	(115, x)
      000160 96               [ 1]  337 	ldw	x, sp
      000161 6F 74            [ 1]  338 	clr	(116, x)
      000163 96               [ 1]  339 	ldw	x, sp
      000164 6F 75            [ 1]  340 	clr	(117, x)
      000166 96               [ 1]  341 	ldw	x, sp
      000167 6F 76            [ 1]  342 	clr	(118, x)
      000169 96               [ 1]  343 	ldw	x, sp
      00016A 6F 77            [ 1]  344 	clr	(119, x)
      00016C 96               [ 1]  345 	ldw	x, sp
      00016D 6F 78            [ 1]  346 	clr	(120, x)
      00016F 96               [ 1]  347 	ldw	x, sp
      000170 6F 79            [ 1]  348 	clr	(121, x)
      000172 96               [ 1]  349 	ldw	x, sp
      000173 6F 7A            [ 1]  350 	clr	(122, x)
      000175 96               [ 1]  351 	ldw	x, sp
      000176 6F 7B            [ 1]  352 	clr	(123, x)
      000178 96               [ 1]  353 	ldw	x, sp
      000179 6F 7C            [ 1]  354 	clr	(124, x)
      00017B 96               [ 1]  355 	ldw	x, sp
      00017C 6F 7D            [ 1]  356 	clr	(125, x)
      00017E 96               [ 1]  357 	ldw	x, sp
      00017F 6F 7E            [ 1]  358 	clr	(126, x)
      000181 96               [ 1]  359 	ldw	x, sp
      000182 6F 7F            [ 1]  360 	clr	(127, x)
      000184 96               [ 1]  361 	ldw	x, sp
      000185 6F 80            [ 1]  362 	clr	(128, x)
      000187 96               [ 1]  363 	ldw	x, sp
      000188 6F 81            [ 1]  364 	clr	(129, x)
      00018A 96               [ 1]  365 	ldw	x, sp
      00018B 6F 82            [ 1]  366 	clr	(130, x)
      00018D 96               [ 1]  367 	ldw	x, sp
      00018E 6F 83            [ 1]  368 	clr	(131, x)
      000190 96               [ 1]  369 	ldw	x, sp
      000191 6F 84            [ 1]  370 	clr	(132, x)
      000193 96               [ 1]  371 	ldw	x, sp
      000194 6F 85            [ 1]  372 	clr	(133, x)
      000196 96               [ 1]  373 	ldw	x, sp
      000197 6F 86            [ 1]  374 	clr	(134, x)
      000199 96               [ 1]  375 	ldw	x, sp
      00019A 6F 87            [ 1]  376 	clr	(135, x)
      00019C 96               [ 1]  377 	ldw	x, sp
      00019D 6F 88            [ 1]  378 	clr	(136, x)
      00019F 96               [ 1]  379 	ldw	x, sp
      0001A0 6F 89            [ 1]  380 	clr	(137, x)
      0001A2 96               [ 1]  381 	ldw	x, sp
      0001A3 6F 8A            [ 1]  382 	clr	(138, x)
      0001A5 96               [ 1]  383 	ldw	x, sp
      0001A6 6F 8B            [ 1]  384 	clr	(139, x)
      0001A8 96               [ 1]  385 	ldw	x, sp
      0001A9 6F 8C            [ 1]  386 	clr	(140, x)
      0001AB 96               [ 1]  387 	ldw	x, sp
      0001AC 6F 8D            [ 1]  388 	clr	(141, x)
      0001AE 96               [ 1]  389 	ldw	x, sp
      0001AF 6F 8E            [ 1]  390 	clr	(142, x)
      0001B1 96               [ 1]  391 	ldw	x, sp
      0001B2 6F 8F            [ 1]  392 	clr	(143, x)
      0001B4 96               [ 1]  393 	ldw	x, sp
      0001B5 6F 90            [ 1]  394 	clr	(144, x)
      0001B7 96               [ 1]  395 	ldw	x, sp
      0001B8 6F 91            [ 1]  396 	clr	(145, x)
      0001BA 96               [ 1]  397 	ldw	x, sp
      0001BB 6F 92            [ 1]  398 	clr	(146, x)
      0001BD 96               [ 1]  399 	ldw	x, sp
      0001BE 6F 93            [ 1]  400 	clr	(147, x)
      0001C0 96               [ 1]  401 	ldw	x, sp
      0001C1 6F 94            [ 1]  402 	clr	(148, x)
      0001C3 96               [ 1]  403 	ldw	x, sp
      0001C4 6F 95            [ 1]  404 	clr	(149, x)
      0001C6 96               [ 1]  405 	ldw	x, sp
      0001C7 6F 96            [ 1]  406 	clr	(150, x)
      0001C9 96               [ 1]  407 	ldw	x, sp
      0001CA 6F 97            [ 1]  408 	clr	(151, x)
      0001CC 96               [ 1]  409 	ldw	x, sp
      0001CD 6F 98            [ 1]  410 	clr	(152, x)
      0001CF 96               [ 1]  411 	ldw	x, sp
      0001D0 6F 99            [ 1]  412 	clr	(153, x)
      0001D2 96               [ 1]  413 	ldw	x, sp
      0001D3 6F 9A            [ 1]  414 	clr	(154, x)
      0001D5 96               [ 1]  415 	ldw	x, sp
      0001D6 6F 9B            [ 1]  416 	clr	(155, x)
      0001D8 96               [ 1]  417 	ldw	x, sp
      0001D9 6F 9C            [ 1]  418 	clr	(156, x)
      0001DB 96               [ 1]  419 	ldw	x, sp
      0001DC 6F 9D            [ 1]  420 	clr	(157, x)
      0001DE 96               [ 1]  421 	ldw	x, sp
      0001DF 6F 9E            [ 1]  422 	clr	(158, x)
      0001E1 96               [ 1]  423 	ldw	x, sp
      0001E2 6F 9F            [ 1]  424 	clr	(159, x)
      0001E4 96               [ 1]  425 	ldw	x, sp
      0001E5 6F A0            [ 1]  426 	clr	(160, x)
      0001E7 96               [ 1]  427 	ldw	x, sp
      0001E8 6F A1            [ 1]  428 	clr	(161, x)
      0001EA 96               [ 1]  429 	ldw	x, sp
      0001EB 6F A2            [ 1]  430 	clr	(162, x)
      0001ED 96               [ 1]  431 	ldw	x, sp
      0001EE 6F A3            [ 1]  432 	clr	(163, x)
      0001F0 96               [ 1]  433 	ldw	x, sp
      0001F1 6F A4            [ 1]  434 	clr	(164, x)
      0001F3 96               [ 1]  435 	ldw	x, sp
      0001F4 6F A5            [ 1]  436 	clr	(165, x)
      0001F6 96               [ 1]  437 	ldw	x, sp
      0001F7 6F A6            [ 1]  438 	clr	(166, x)
      0001F9 96               [ 1]  439 	ldw	x, sp
      0001FA 6F A7            [ 1]  440 	clr	(167, x)
      0001FC 96               [ 1]  441 	ldw	x, sp
      0001FD 6F A8            [ 1]  442 	clr	(168, x)
      0001FF 96               [ 1]  443 	ldw	x, sp
      000200 6F A9            [ 1]  444 	clr	(169, x)
      000202 96               [ 1]  445 	ldw	x, sp
      000203 6F AA            [ 1]  446 	clr	(170, x)
      000205 96               [ 1]  447 	ldw	x, sp
      000206 6F AB            [ 1]  448 	clr	(171, x)
      000208 96               [ 1]  449 	ldw	x, sp
      000209 6F AC            [ 1]  450 	clr	(172, x)
      00020B 96               [ 1]  451 	ldw	x, sp
      00020C 6F AD            [ 1]  452 	clr	(173, x)
      00020E 96               [ 1]  453 	ldw	x, sp
      00020F 6F AE            [ 1]  454 	clr	(174, x)
      000211 96               [ 1]  455 	ldw	x, sp
      000212 6F AF            [ 1]  456 	clr	(175, x)
      000214 96               [ 1]  457 	ldw	x, sp
      000215 6F B0            [ 1]  458 	clr	(176, x)
      000217 96               [ 1]  459 	ldw	x, sp
      000218 6F B1            [ 1]  460 	clr	(177, x)
      00021A 96               [ 1]  461 	ldw	x, sp
      00021B 6F B2            [ 1]  462 	clr	(178, x)
      00021D 96               [ 1]  463 	ldw	x, sp
      00021E 6F B3            [ 1]  464 	clr	(179, x)
      000220 96               [ 1]  465 	ldw	x, sp
      000221 6F B4            [ 1]  466 	clr	(180, x)
      000223 96               [ 1]  467 	ldw	x, sp
      000224 6F B5            [ 1]  468 	clr	(181, x)
      000226 96               [ 1]  469 	ldw	x, sp
      000227 6F B6            [ 1]  470 	clr	(182, x)
      000229 96               [ 1]  471 	ldw	x, sp
      00022A 6F B7            [ 1]  472 	clr	(183, x)
      00022C 96               [ 1]  473 	ldw	x, sp
      00022D 6F B8            [ 1]  474 	clr	(184, x)
      00022F 96               [ 1]  475 	ldw	x, sp
      000230 6F B9            [ 1]  476 	clr	(185, x)
      000232 96               [ 1]  477 	ldw	x, sp
      000233 6F BA            [ 1]  478 	clr	(186, x)
      000235 96               [ 1]  479 	ldw	x, sp
      000236 6F BB            [ 1]  480 	clr	(187, x)
      000238 96               [ 1]  481 	ldw	x, sp
      000239 6F BC            [ 1]  482 	clr	(188, x)
      00023B 96               [ 1]  483 	ldw	x, sp
      00023C 6F BD            [ 1]  484 	clr	(189, x)
      00023E 96               [ 1]  485 	ldw	x, sp
      00023F 6F BE            [ 1]  486 	clr	(190, x)
      000241 96               [ 1]  487 	ldw	x, sp
      000242 6F BF            [ 1]  488 	clr	(191, x)
      000244 96               [ 1]  489 	ldw	x, sp
      000245 6F C0            [ 1]  490 	clr	(192, x)
      000247 96               [ 1]  491 	ldw	x, sp
      000248 6F C1            [ 1]  492 	clr	(193, x)
      00024A 96               [ 1]  493 	ldw	x, sp
      00024B 6F C2            [ 1]  494 	clr	(194, x)
      00024D 96               [ 1]  495 	ldw	x, sp
      00024E 6F C3            [ 1]  496 	clr	(195, x)
      000250 96               [ 1]  497 	ldw	x, sp
      000251 6F C4            [ 1]  498 	clr	(196, x)
      000253 96               [ 1]  499 	ldw	x, sp
      000254 6F C5            [ 1]  500 	clr	(197, x)
      000256 96               [ 1]  501 	ldw	x, sp
      000257 6F C6            [ 1]  502 	clr	(198, x)
      000259 96               [ 1]  503 	ldw	x, sp
      00025A 6F C7            [ 1]  504 	clr	(199, x)
      00025C 96               [ 1]  505 	ldw	x, sp
      00025D 6F C8            [ 1]  506 	clr	(200, x)
                                    507 ;	src/main.c: 23: for (uint8_t i = 0; i < 100; i++)
      00025F 4F               [ 1]  508 	clr	a
      000260                        509 00104$:
      000260 A1 64            [ 1]  510 	cp	a, #0x64
      000262 24 0E            [ 1]  511 	jrnc	00101$
                                    512 ;	src/main.c: 25: buff[i] = i;
      000264 96               [ 1]  513 	ldw	x, sp
      000265 5C               [ 1]  514 	incw	x
      000266 89               [ 2]  515 	pushw	x
      000267 5F               [ 1]  516 	clrw	x
      000268 97               [ 1]  517 	ld	xl, a
      000269 72 FB 01         [ 2]  518 	addw	x, (1, sp)
      00026C 5B 02            [ 2]  519 	addw	sp, #2
      00026E F7               [ 1]  520 	ld	(x), a
                                    521 ;	src/main.c: 23: for (uint8_t i = 0; i < 100; i++)
      00026F 4C               [ 1]  522 	inc	a
      000270 20 EE            [ 2]  523 	jra	00104$
      000272                        524 00101$:
                                    525 ;	src/main.c: 28: uart_write("Configuring SPI...\n");
      000272 4Br00            [ 1]  526 	push	#<(___str_0 + 0)
      000274 4Bs00            [ 1]  527 	push	#((___str_0 + 0) >> 8)
      000276 CDr03r2F         [ 4]  528 	call	_uart_write
      000279 5B 02            [ 2]  529 	addw	sp, #2
                                    530 ;	src/main.c: 29: spi_config();
      00027B CDr00r00         [ 4]  531 	call	_spi_config
                                    532 ;	src/main.c: 31: uart_write("Prepare to write...\n");
      00027E 4Br14            [ 1]  533 	push	#<(___str_1 + 0)
      000280 4Bs00            [ 1]  534 	push	#((___str_1 + 0) >> 8)
      000282 CDr03r2F         [ 4]  535 	call	_uart_write
      000285 5B 02            [ 2]  536 	addw	sp, #2
                                    537 ;	src/main.c: 32: flash_write_enable();
      000287 CDr00r00         [ 4]  538 	call	_flash_write_enable
                                    539 ;	src/main.c: 33: flash_erase_block(0, CMD_4K_BLOCK_ERASE);
      00028A 4B 20            [ 1]  540 	push	#0x20
      00028C 5F               [ 1]  541 	clrw	x
      00028D 89               [ 2]  542 	pushw	x
      00028E 5F               [ 1]  543 	clrw	x
      00028F 89               [ 2]  544 	pushw	x
      000290 CDr00r00         [ 4]  545 	call	_flash_erase_block
      000293 5B 05            [ 2]  546 	addw	sp, #5
                                    547 ;	src/main.c: 34: flash_busy_wait();
      000295 CDr00r00         [ 4]  548 	call	_flash_busy_wait
                                    549 ;	src/main.c: 42: flash_write_enable();
      000298 CDr00r00         [ 4]  550 	call	_flash_write_enable
                                    551 ;	src/main.c: 43: uart_write("Writing...\n");
      00029B 4Br29            [ 1]  552 	push	#<(___str_2 + 0)
      00029D 4Bs00            [ 1]  553 	push	#((___str_2 + 0) >> 8)
      00029F CDr03r2F         [ 4]  554 	call	_uart_write
      0002A2 5B 02            [ 2]  555 	addw	sp, #2
                                    556 ;	src/main.c: 44: flash_write_to_addr(0, buff, 100);
      0002A4 4B 64            [ 1]  557 	push	#0x64
      0002A6 4B 00            [ 1]  558 	push	#0x00
      0002A8 96               [ 1]  559 	ldw	x, sp
      0002A9 1C 00 03         [ 2]  560 	addw	x, #3
      0002AC 89               [ 2]  561 	pushw	x
      0002AD 5F               [ 1]  562 	clrw	x
      0002AE 89               [ 2]  563 	pushw	x
      0002AF 5F               [ 1]  564 	clrw	x
      0002B0 89               [ 2]  565 	pushw	x
      0002B1 CDr00r00         [ 4]  566 	call	_flash_write_to_addr
      0002B4 5B 08            [ 2]  567 	addw	sp, #8
                                    568 ;	src/main.c: 45: flash_busy_wait();
      0002B6 CDr00r00         [ 4]  569 	call	_flash_busy_wait
                                    570 ;	src/main.c: 46: uart_write("Write complete...\n");
      0002B9 4Br35            [ 1]  571 	push	#<(___str_3 + 0)
      0002BB 4Bs00            [ 1]  572 	push	#((___str_3 + 0) >> 8)
      0002BD CDr03r2F         [ 4]  573 	call	_uart_write
      0002C0 5B 02            [ 2]  574 	addw	sp, #2
                                    575 ;	src/main.c: 48: uart_write("Reading...\n");
      0002C2 4Br48            [ 1]  576 	push	#<(___str_4 + 0)
      0002C4 4Bs00            [ 1]  577 	push	#((___str_4 + 0) >> 8)
      0002C6 CDr03r2F         [ 4]  578 	call	_uart_write
      0002C9 5B 02            [ 2]  579 	addw	sp, #2
                                    580 ;	src/main.c: 49: flash_read_from_addr(0, buff2, 100);
      0002CB 4B 64            [ 1]  581 	push	#0x64
      0002CD 4B 00            [ 1]  582 	push	#0x00
      0002CF 96               [ 1]  583 	ldw	x, sp
      0002D0 1C 00 67         [ 2]  584 	addw	x, #103
      0002D3 89               [ 2]  585 	pushw	x
      0002D4 5F               [ 1]  586 	clrw	x
      0002D5 89               [ 2]  587 	pushw	x
      0002D6 5F               [ 1]  588 	clrw	x
      0002D7 89               [ 2]  589 	pushw	x
      0002D8 CDr00r00         [ 4]  590 	call	_flash_read_from_addr
      0002DB 5B 08            [ 2]  591 	addw	sp, #8
                                    592 ;	src/main.c: 50: uart_write("Read complete...\n");
      0002DD 4Br54            [ 1]  593 	push	#<(___str_5 + 0)
      0002DF 4Bs00            [ 1]  594 	push	#((___str_5 + 0) >> 8)
      0002E1 CDr03r2F         [ 4]  595 	call	_uart_write
      0002E4 5B 02            [ 2]  596 	addw	sp, #2
                                    597 ;	src/main.c: 52: uart_write("Comparing...\n");
      0002E6 4Br66            [ 1]  598 	push	#<(___str_6 + 0)
      0002E8 4Bs00            [ 1]  599 	push	#((___str_6 + 0) >> 8)
      0002EA CDr03r2F         [ 4]  600 	call	_uart_write
      0002ED 5B 02            [ 2]  601 	addw	sp, #2
                                    602 ;	src/main.c: 54: for(uint8_t ii = 0; ii < 100; ii++)
      0002EF 0F C9            [ 1]  603 	clr	(0xc9, sp)
      0002F1                        604 00107$:
      0002F1 7B C9            [ 1]  605 	ld	a, (0xc9, sp)
      0002F3 A1 64            [ 1]  606 	cp	a, #0x64
      0002F5 24 18            [ 1]  607 	jrnc	00102$
                                    608 ;	src/main.c: 56: uart_write_8bits(buff2[ii]);
      0002F7 5F               [ 1]  609 	clrw	x
      0002F8 7B C9            [ 1]  610 	ld	a, (0xc9, sp)
      0002FA 97               [ 1]  611 	ld	xl, a
      0002FB 89               [ 2]  612 	pushw	x
      0002FC 96               [ 1]  613 	ldw	x, sp
      0002FD 1C 00 67         [ 2]  614 	addw	x, #103
      000300 72 FB 01         [ 2]  615 	addw	x, (1, sp)
      000303 5B 02            [ 2]  616 	addw	sp, #2
      000305 F6               [ 1]  617 	ld	a, (x)
      000306 88               [ 1]  618 	push	a
      000307 CDr03r60         [ 4]  619 	call	_uart_write_8bits
      00030A 84               [ 1]  620 	pop	a
                                    621 ;	src/main.c: 54: for(uint8_t ii = 0; ii < 100; ii++)
      00030B 0C C9            [ 1]  622 	inc	(0xc9, sp)
      00030D 20 E2            [ 2]  623 	jra	00107$
      00030F                        624 00102$:
                                    625 ;	src/main.c: 63: uart_write("Error count: ");
      00030F 4Br74            [ 1]  626 	push	#<(___str_7 + 0)
      000311 4Bs00            [ 1]  627 	push	#((___str_7 + 0) >> 8)
      000313 CDr03r2F         [ 4]  628 	call	_uart_write
                                    629 ;	src/main.c: 66: }
      000316 5B CB            [ 2]  630 	addw	sp, #203
      000318 81               [ 4]  631 	ret
                                    632 ;	src/main.c: 69: void uart_init()
                                    633 ;	-----------------------------------------
                                    634 ;	 function uart_init
                                    635 ;	-----------------------------------------
      000319                        636 _uart_init:
                                    637 ;	src/main.c: 72: UART1_CR2 |= UART_CR2_TEN; // Transmitter enable
      000319 72 16 52 35      [ 1]  638 	bset	21045, #3
                                    639 ;	src/main.c: 74: UART1_CR3 &= ~(UART_CR3_STOP1 | UART_CR3_STOP2); // 1 stop bit
      00031D C6 52 36         [ 1]  640 	ld	a, 0x5236
      000320 A4 CF            [ 1]  641 	and	a, #0xcf
      000322 C7 52 36         [ 1]  642 	ld	0x5236, a
                                    643 ;	src/main.c: 76: UART1_BRR2 = 0x01; UART1_BRR1 = 0x34; // 0x0341 coded funky way (see page 365 and 336 of ref manual)
      000325 35 01 52 33      [ 1]  644 	mov	0x5233+0, #0x01
      000329 35 34 52 32      [ 1]  645 	mov	0x5232+0, #0x34
                                    646 ;	src/main.c: 77: }
      00032D 81               [ 4]  647 	ret
                                    648 ;	src/main.c: 79: void gpio_init()
                                    649 ;	-----------------------------------------
                                    650 ;	 function gpio_init
                                    651 ;	-----------------------------------------
      00032E                        652 _gpio_init:
                                    653 ;	src/main.c: 82: }
      00032E 81               [ 4]  654 	ret
                                    655 ;	src/main.c: 84: uint16_t uart_write(const char *str) {
                                    656 ;	-----------------------------------------
                                    657 ;	 function uart_write
                                    658 ;	-----------------------------------------
      00032F                        659 _uart_write:
      00032F 52 03            [ 2]  660 	sub	sp, #3
                                    661 ;	src/main.c: 86: for(i = 0; i < strlen(str); i++) {
      000331 0F 03            [ 1]  662 	clr	(0x03, sp)
      000333                        663 00106$:
      000333 1E 06            [ 2]  664 	ldw	x, (0x06, sp)
      000335 89               [ 2]  665 	pushw	x
      000336 CDr00r00         [ 4]  666 	call	_strlen
      000339 5B 02            [ 2]  667 	addw	sp, #2
      00033B 1F 01            [ 2]  668 	ldw	(0x01, sp), x
      00033D 5F               [ 1]  669 	clrw	x
      00033E 7B 03            [ 1]  670 	ld	a, (0x03, sp)
      000340 97               [ 1]  671 	ld	xl, a
      000341 13 01            [ 2]  672 	cpw	x, (0x01, sp)
      000343 24 14            [ 1]  673 	jrnc	00104$
                                    674 ;	src/main.c: 87: while(!(UART1_SR & UART_SR_TXE)); // !Transmit data register empty
      000345                        675 00101$:
      000345 C6 52 30         [ 1]  676 	ld	a, 0x5230
      000348 2A FB            [ 1]  677 	jrpl	00101$
                                    678 ;	src/main.c: 88: UART1_DR = str[i];
      00034A 5F               [ 1]  679 	clrw	x
      00034B 7B 03            [ 1]  680 	ld	a, (0x03, sp)
      00034D 97               [ 1]  681 	ld	xl, a
      00034E 72 FB 06         [ 2]  682 	addw	x, (0x06, sp)
      000351 F6               [ 1]  683 	ld	a, (x)
      000352 C7 52 31         [ 1]  684 	ld	0x5231, a
                                    685 ;	src/main.c: 86: for(i = 0; i < strlen(str); i++) {
      000355 0C 03            [ 1]  686 	inc	(0x03, sp)
      000357 20 DA            [ 2]  687 	jra	00106$
      000359                        688 00104$:
                                    689 ;	src/main.c: 90: return(i); // Bytes sent
      000359 7B 03            [ 1]  690 	ld	a, (0x03, sp)
      00035B 5F               [ 1]  691 	clrw	x
      00035C 97               [ 1]  692 	ld	xl, a
                                    693 ;	src/main.c: 91: }
      00035D 5B 03            [ 2]  694 	addw	sp, #3
      00035F 81               [ 4]  695 	ret
                                    696 ;	src/main.c: 93: void uart_write_8bits(uint8_t d)
                                    697 ;	-----------------------------------------
                                    698 ;	 function uart_write_8bits
                                    699 ;	-----------------------------------------
      000360                        700 _uart_write_8bits:
                                    701 ;	src/main.c: 95: while(!(UART1_SR & UART_SR_TXE)); // !Transmit data register empty
      000360                        702 00101$:
      000360 C6 52 30         [ 1]  703 	ld	a, 0x5230
      000363 2A FB            [ 1]  704 	jrpl	00101$
                                    705 ;	src/main.c: 96: UART1_DR = d;
      000365 AE 52 31         [ 2]  706 	ldw	x, #0x5231
      000368 7B 03            [ 1]  707 	ld	a, (0x03, sp)
      00036A F7               [ 1]  708 	ld	(x), a
                                    709 ;	src/main.c: 97: }
      00036B 81               [ 4]  710 	ret
                                    711 	.area CODE
                                    712 	.area CONST
                                    713 	.area CONST
      000000                        714 ___str_0:
      000000 43 6F 6E 66 69 67 75   715 	.ascii "Configuring SPI..."
             72 69 6E 67 20 53 50
             49 2E 2E 2E
      000012 0A                     716 	.db 0x0a
      000013 00                     717 	.db 0x00
                                    718 	.area CODE
                                    719 	.area CONST
      000014                        720 ___str_1:
      000014 50 72 65 70 61 72 65   721 	.ascii "Prepare to write..."
             20 74 6F 20 77 72 69
             74 65 2E 2E 2E
      000027 0A                     722 	.db 0x0a
      000028 00                     723 	.db 0x00
                                    724 	.area CODE
                                    725 	.area CONST
      000029                        726 ___str_2:
      000029 57 72 69 74 69 6E 67   727 	.ascii "Writing..."
             2E 2E 2E
      000033 0A                     728 	.db 0x0a
      000034 00                     729 	.db 0x00
                                    730 	.area CODE
                                    731 	.area CONST
      000035                        732 ___str_3:
      000035 57 72 69 74 65 20 63   733 	.ascii "Write complete..."
             6F 6D 70 6C 65 74 65
             2E 2E 2E
      000046 0A                     734 	.db 0x0a
      000047 00                     735 	.db 0x00
                                    736 	.area CODE
                                    737 	.area CONST
      000048                        738 ___str_4:
      000048 52 65 61 64 69 6E 67   739 	.ascii "Reading..."
             2E 2E 2E
      000052 0A                     740 	.db 0x0a
      000053 00                     741 	.db 0x00
                                    742 	.area CODE
                                    743 	.area CONST
      000054                        744 ___str_5:
      000054 52 65 61 64 20 63 6F   745 	.ascii "Read complete..."
             6D 70 6C 65 74 65 2E
             2E 2E
      000064 0A                     746 	.db 0x0a
      000065 00                     747 	.db 0x00
                                    748 	.area CODE
                                    749 	.area CONST
      000066                        750 ___str_6:
      000066 43 6F 6D 70 61 72 69   751 	.ascii "Comparing..."
             6E 67 2E 2E 2E
      000072 0A                     752 	.db 0x0a
      000073 00                     753 	.db 0x00
                                    754 	.area CODE
                                    755 	.area CONST
      000074                        756 ___str_7:
      000074 45 72 72 6F 72 20 63   757 	.ascii "Error count: "
             6F 75 6E 74 3A 20
      000081 00                     758 	.db 0x00
                                    759 	.area CODE
                                    760 	.area INITIALIZER
                                    761 	.area CABS (ABS)
